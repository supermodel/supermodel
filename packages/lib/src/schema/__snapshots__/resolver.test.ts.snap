// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Resolver resolve valid schema via file 1`] = `
Array [
  Object {
    "$id": "http://supermodel.io/schemaorg/Action",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Action",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.<br/><br/>

See also <a href=\\"http://blog.schema.org/2014/04/announcing-schemaorg-actions.html\\">blog post</a> and <a href=\\"http://schema.org/docs/actions.html\\">Actions overview document</a>.",
    "properties": Object {
      "error": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/error",
      },
      "result": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/result",
      },
    },
    "title": "Action",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DataType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DataType",
    "description": "The basic data types such as Integers, Strings, etc.",
    "title": "DataType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Text",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Text",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataType",
      },
    ],
    "description": "Data type: Text.",
    "title": "Text",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Thing",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Thing",
    "description": "The most generic type of item.",
    "properties": Object {
      "name": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/name",
      },
    },
    "title": "Thing",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/error",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/error",
    "description": "For failed actions, more information on the cause of the failure.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "error",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/name",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/name",
    "description": "The name of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "name",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/result",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/result",
    "description": "The result produced in the action. e.g. John wrote <em>a book</em>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "result",
  },
]
`;

exports[`Resolver resolve valid schema via http #2 1`] = `
Array [
  Object {
    "$id": "http://supermodel.io/adidas/product/Article",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "examples": Array [
      Object {
        "ageGroup": Object {
          "code": "A",
          "description": "ADULT",
        },
        "articleDescription": "COPA MUNDIAL",
        "articleNumber": "015110",
        "assets": Array [
          Object {},
        ],
        "brand": Object {
          "code": "11",
          "description": "ADIDAS",
        },
        "catalog": Object {},
        "color1": Object {
          "code": "R1",
          "description": "Red1",
        },
        "color2": Object {
          "code": "R2",
          "description": "Red2",
        },
        "color3": Object {
          "code": "R3",
          "description": "Red3",
        },
        "color4": Object {
          "code": "R4",
          "description": "Red4",
        },
        "colors": Array [
          Object {},
        ],
        "colorwayDescription": "BLABAS/GRAFIT/BLABAS",
        "colorwayname": "FTWR WHITE/BLACK",
        "gender": Object {
          "code": "M",
          "description": "MALE",
        },
        "imageLaunchDate": "launchDate",
        "materialWeight": "weight",
        "modelNumber": "10034",
        "productType": Object {
          "code": "104",
          "description": "FOOTBALL SHOES (FIRM GROUND)",
        },
        "seasons": Array [
          Object {},
        ],
        "skus": Array [
          Object {},
        ],
      },
    ],
    "properties": Object {
      "ageGroup": Object {
        "$ref": "utils/CodeDescription",
      },
      "articleDescription": Object {
        "type": "string",
      },
      "articleNumber": Object {
        "type": "string",
      },
      "assets": Object {
        "items": Object {
          "$ref": "Asset",
        },
        "type": "array",
      },
      "brand": Object {
        "$ref": "utils/CodeDescription",
      },
      "businessSegment": Object {
        "$ref": "utils/CodeDescription",
      },
      "catalog": Object {
        "$ref": "Catalog",
      },
      "color1": Object {
        "$ref": "utils/CodeDescription",
      },
      "color2": Object {
        "$ref": "utils/CodeDescription",
      },
      "color3": Object {
        "$ref": "utils/CodeDescription",
      },
      "color4": Object {
        "$ref": "utils/CodeDescription",
      },
      "colors": Object {
        "items": Object {
          "$ref": "Color",
        },
        "type": "array",
      },
      "colorwayDescription": Object {
        "type": "string",
      },
      "colorwayName": Object {
        "type": "string",
      },
      "franchise": Object {
        "$ref": "utils/CodeDescription",
      },
      "gender": Object {
        "$ref": "utils/CodeDescription",
      },
      "imageLaunchDate": Object {
        "format": "date-time",
        "type": "string",
      },
      "lifecycleStatus": Object {
        "properties": Object {
          "code": Object {
            "type": "string",
          },
          "date": Object {
            "format": "date-time",
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
        },
        "type": "object",
      },
      "materialWeight": Object {
        "type": "string",
      },
      "modelNumber": Object {
        "type": "string",
      },
      "productDivision": Object {
        "$ref": "utils/CodeDescription",
      },
      "productFit": Object {
        "$ref": "utils/CodeDescription",
      },
      "productGroup": Object {
        "$ref": "utils/CodeDescription",
      },
      "productType": Object {
        "$ref": "utils/CodeDescription",
      },
      "related": Object {
        "items": Object {
          "$ref": "Article",
        },
        "type": "array",
      },
      "seasons": Object {
        "items": Object {
          "$ref": "ArticleSeason",
        },
        "type": "array",
      },
      "skus": Object {
        "items": Object {
          "$ref": "SKU",
        },
        "type": "array",
      },
      "sportsCategory": Object {
        "$ref": "utils/CodeDescription",
      },
      "subBrand": Object {
        "$ref": "utils/CodeDescription",
      },
    },
    "title": "Article",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/adidas/product/ArticleSeason",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Seasonal information about article",
    "examples": Array [
      Object {
        "carryOver": false,
        "retailExitDate": "2017-11-30",
        "retailIntroDate": "2017-06-01",
        "seasonName": "FW17",
      },
    ],
    "properties": Object {
      "carryOver": Object {
        "type": "boolean",
      },
      "retailExitDate": Object {
        "format": "date-time",
        "type": "string",
      },
      "retailIntroDate": Object {
        "format": "date-time",
        "type": "string",
      },
      "seasonName": Object {
        "type": "string",
      },
    },
    "title": "Article Season",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/adidas/product/Asset",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Digital Asset",
    "examples": Array [
      Object {
        "assetCategory": "Photography",
        "assetHref": "http://domain.com/image.jpeg",
        "assetType": "image",
        "defaultAlias": "alias",
        "image": Object {
          "bgColor": "transparent",
          "height": 2000,
          "representation": null,
          "width": 2000,
        },
        "imageStyle": "Standard",
        "model": Object {
          "chest": 97,
          "height": 197,
          "productSize": 540,
          "waist": 58,
        },
        "pairedArticles": Object {
          "value": "AB1234",
        },
        "publicID": "AZ1",
        "sortOrder": 6,
        "usage": Object {
          "value": "pdp",
        },
        "usageTerms": Object {
          "value": "B2B Catalogue",
        },
        "video": Object {
          "fileSize": 99,
        },
        "view": "Top",
        "viewGroup": "3d",
      },
    ],
    "properties": Object {
      "assetCategory": Object {
        "type": "string",
      },
      "assetHref": Object {
        "format": "uri",
        "type": "string",
      },
      "assetType": Object {
        "enum": Array [
          "image",
          "video",
          "other",
        ],
        "type": "string",
      },
      "defaultAlias": Object {
        "type": "string",
      },
      "image": Object {
        "properties": Object {
          "bgColor": Object {
            "type": "string",
          },
          "height": Object {
            "type": "integer",
          },
          "representation": Object {
            "type": "string",
          },
          "width": Object {
            "type": "integer",
          },
        },
        "type": "object",
      },
      "imageStyle": Object {
        "type": "string",
      },
      "model": Object {
        "properties": Object {
          "chest": Object {
            "type": "string",
          },
          "height": Object {
            "type": "string",
          },
          "productSize": Object {
            "type": "string",
          },
          "waist": Object {
            "type": "string",
          },
        },
        "type": "object",
      },
      "pairedArticles": Object {
        "items": Array [
          Object {
            "type": "string",
            "value": null,
          },
        ],
        "type": "array",
      },
      "publicId": Object {
        "type": "string",
      },
      "sortOrder": Object {
        "type": "string",
      },
      "usage": Object {
        "items": Array [
          Object {
            "type": "string",
            "value": null,
          },
        ],
        "type": "array",
      },
      "usageTerms": Object {
        "items": Array [
          Object {
            "type": "string",
            "value": null,
          },
        ],
        "type": "array",
      },
      "video": Object {
        "properties": Object {
          "fileSize": Object {
            "type": "integer",
          },
        },
        "type": "object",
      },
      "view": Object {
        "type": "string",
      },
      "viewGroup": Object {
        "type": "string",
      },
    },
    "required": Array [
      "assetType",
      "viewGroup",
      "view",
      "assetCategory",
      "usageTerms",
      "assetHref",
    ],
    "title": "Asset",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/adidas/product/Catalog",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": Object {
      "CatalogCopy": Object {
        "properties": Object {
          "articleNumber": Object {
            "type": "string",
          },
          "catalog": Object {
            "items": Object {
              "$ref": "Catalogues",
            },
            "type": "array",
          },
          "modelNumber": Object {
            "type": "string",
          },
        },
        "title": "Catalog Copy",
        "type": "object",
      },
    },
    "examples": Array [
      Object {
        "catalogueCopy": Object {},
        "featureAndBenefits": Array [
          Object {},
        ],
      },
    ],
    "properties": Object {
      "catalogueCopy": Object {
        "$ref": "#/definitions/CatalogCopy",
      },
    },
    "title": "Catalog",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/adidas/product/Catalogues",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "properties": Object {
      "acsModelName": Object {
        "type": "string",
      },
      "b2bCopy": Object {
        "type": "string",
      },
      "b2bCopyShort": Object {
        "type": "string",
      },
      "b2cCopy": Object {
        "type": "string",
      },
      "b2cCopyShort": Object {
        "type": "string",
      },
      "b2cModelName": Object {
        "type": "string",
      },
      "bulletFit": Object {
        "type": "string",
      },
      "bulletMaterial": Object {
        "examples": Array [
          Object {
            "acsModelName": "COPA MUNDIAL",
            "b2bCopy": "Hurricanes Training Jersey as worn by the players when training with dynamic retro design inspired by the original Super Jersey.Captured with shock blue and black colors on climalite fabric with moisture wicking properties.",
            "b2bCopyShort": "Hurricanes Training Jersey as worn by the players when training with dynamic retro design inspired by the orginal Super jersey.",
            "b2cCopy": "De populairste voetbalschoen ooit, en terecht. De adidas Copa Mundial heeft een bovenwerk van rijk leer en een loopzool met dubbele dichtheid die al decennia lang de toon zet voor comfort en prestaties op het veld.",
            "b2cCopyShort": "Entraîne-toi comme les pros avec ce haut de l'équipe de Belgique de football.",
            "b2cModelName": "COPA MUNDIAL",
            "bulletFit": "bulletFit",
            "bulletMaterial": "Maille double 100 % polyester.",
            "bulletMeasurements": "bullet measurements",
            "bulletWeight": "bullet weight",
            "bullets1": "materiál Climalite odvádí pot a udrží tě vsuchu za všech okolností",
            "bullets2": "Ribbet V-hals",
            "bullets3": "Nackenband",
            "bullets4": "Επένδυση προστασίας από τον άνεμο στο μπροστινό μέρος. Μανσέτες με ανοίγματα για τους αντίχειρες",
            "bullets5": "Woven Belgium crest on chest",
            "bullets6": "3 bandas en las mangas; logotipo de adidas serigrafiado a la derecha del pecho",
            "bullets7": "Three stripes",
            "locale": "en-GB",
            "materialComposition": "100% Organic Cotton",
            "materialConstruction": "Single jersey",
          },
        ],
        "type": "string",
      },
      "bulletMeasurements": Object {
        "type": "string",
      },
      "bulletWeight": Object {
        "type": "string",
      },
      "bullets1": Object {
        "type": "string",
      },
      "bullets2": Object {
        "type": "string",
      },
      "bullets3": Object {
        "type": "string",
      },
      "bullets4": Object {
        "type": "string",
      },
      "bullets5": Object {
        "type": "string",
      },
      "bullets6": Object {
        "type": "string",
      },
      "bullets7": Object {
        "type": "string",
      },
      "locale": Object {
        "type": "string",
      },
      "materialComposition": Object {
        "type": "string",
      },
      "materialConstruction": Object {
        "type": "string",
      },
    },
    "title": "Catalogues",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/adidas/product/Color",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Color descriptions are language-dependent",
    "examples": Array [
      Object {
        "color1": Object {
          "code": "A0QM",
          "description": "core black",
        },
        "color2": Object {
          "code": "A98B",
          "description": "utility black",
        },
        "color3": Object {
          "code": "A0QM",
          "description": "core black",
        },
        "color4": Object {
          "code": "01F7",
          "description": "ftwr white",
        },
      },
    ],
    "properties": Object {
      "color1": Object {
        "$ref": "utils/CodeDescription",
      },
      "color2": Object {
        "$ref": "utils/CodeDescription",
      },
      "color3": Object {
        "$ref": "utils/CodeDescription",
      },
      "color4": Object {
        "$ref": "utils/CodeDescription",
      },
    },
    "title": "Color",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/adidas/product/SKU",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "examples": Array [
      Object {
        "EAN": "4058026055128",
        "UPC": "885591427616",
        "conversionIDs": Array [
          Object {
            "saleSizeAbbr": "27",
            "saleSizeConvID": "D",
            "saleSizeScale": "8C",
          },
        ],
        "srcSizeCD3": "380",
        "srcSizeScale": "T4",
      },
    ],
    "properties": Object {
      "EAN": Object {
        "type": "string",
      },
      "UPC": Object {
        "type": "string",
      },
      "conversionIDs": Object {
        "items": Array [
          Object {
            "properties": Object {
              "localSize": Object {
                "type": "string",
              },
              "saleSizeAbbr": Object {
                "type": "string",
              },
              "saleSizeConvID": Object {
                "type": "string",
              },
              "saleSizeDesc": Object {
                "type": "string",
              },
              "saleSizeScale": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        ],
        "type": "array",
      },
      "srcSizeCD3": Object {
        "type": "string",
      },
      "srcSizeDescription": Object {
        "type": "string",
      },
      "srcSizeScale": Object {
        "type": "string",
      },
    },
    "title": "SKU",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/adidas/product/utils/CodeDescription",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Helper data structure to hold any code - description pair",
    "properties": Object {
      "code": Object {
        "type": "string",
      },
      "description": Object {
        "type": "string",
      },
    },
    "title": "Code Description Tuple",
    "type": "object",
  },
]
`;

exports[`Resolver resolve valid schema via http 1`] = `
Array [
  Object {
    "$id": "http://supermodel.io/schemaorg/Action",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Action",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.<br/><br/>

See also <a href=\\"http://blog.schema.org/2014/04/announcing-schemaorg-actions.html\\">blog post</a> and <a href=\\"http://schema.org/docs/actions.html\\">Actions overview document</a>.",
    "properties": Object {
      "actionStatus": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/actionStatus",
      },
      "agent": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/agent",
      },
      "endTime": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/endTime",
      },
      "error": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/error",
      },
      "instrument": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/instrument",
      },
      "location": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/location",
      },
      "object": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/object",
      },
      "participant": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/participant",
      },
      "result": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/result",
      },
      "startTime": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/startTime",
      },
      "target": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/target",
      },
    },
    "title": "Action",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ActionStatusType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ActionStatusType",
    "description": "The status of an Action.",
    "enum": Array [
      "PotentialActionStatus",
      "FailedActionStatus",
      "CompletedActionStatus",
      "ActiveActionStatus",
    ],
    "title": "ActionStatusType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/AdministrativeArea",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/AdministrativeArea",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "description": "A geographical region, typically under the jurisdiction of a particular government.",
    "title": "AdministrativeArea",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/AggregateRating",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/AggregateRating",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Rating",
      },
    ],
    "description": "The average rating based on multiple ratings or reviews.",
    "properties": Object {
      "itemReviewed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemReviewed",
      },
      "ratingCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/ratingCount",
      },
      "reviewCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/reviewCount",
      },
    },
    "title": "AggregateRating",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/AlignmentObject",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/AlignmentObject",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "An intangible item that describes an alignment between a learning resource and a node in an educational framework.",
    "properties": Object {
      "alignmentType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/alignmentType",
      },
      "educationalFramework": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/educationalFramework",
      },
      "targetDescription": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/targetDescription",
      },
      "targetName": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/targetName",
      },
      "targetUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/targetUrl",
      },
    },
    "title": "AlignmentObject",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Answer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Answer",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Comment",
      },
    ],
    "description": "An answer offered to a question; perhaps correct, perhaps opinionated or wrong.",
    "title": "Answer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Article",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Article",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.<br/><br/>

See also <a href=\\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\\">blog post</a>.",
    "properties": Object {
      "articleBody": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/articleBody",
      },
      "articleSection": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/articleSection",
      },
      "pageEnd": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/pageEnd",
      },
      "pageStart": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/pageStart",
      },
      "pagination": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/pagination",
      },
      "wordCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/wordCount",
      },
    },
    "title": "Article",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Audience",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Audience",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "Intended audience for an item, i.e. the group for whom the item was created.",
    "enum": Array [
      "Researcher",
    ],
    "properties": Object {
      "audienceType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/audienceType",
      },
      "geographicArea": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/geographicArea",
      },
    },
    "title": "Audience",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/AudioObject",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/AudioObject",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MediaObject",
      },
    ],
    "description": "An audio file.",
    "properties": Object {
      "transcript": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/transcript",
      },
    },
    "title": "AudioObject",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Boolean",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Boolean",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataType",
      },
    ],
    "description": "Boolean: True or False.",
    "enum": Array [
      "True",
      "False",
    ],
    "title": "Boolean",
    "type": "boolean",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Brand",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Brand",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "A brand is a name used by an organization or business person for labeling a product, product group, or similar.",
    "properties": Object {
      "aggregateRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating",
      },
      "logo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/logo",
      },
      "review": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/review",
      },
    },
    "title": "Brand",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/BroadcastService",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/BroadcastService",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Service",
      },
    ],
    "description": "A delivery service through which content is provided via broadcast over the air or online.",
    "properties": Object {
      "area": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/area",
      },
      "broadcastAffiliateOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/broadcastAffiliateOf",
      },
      "broadcastDisplayName": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/broadcastDisplayName",
      },
      "broadcastTimezone": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/broadcastTimezone",
      },
      "broadcaster": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/broadcaster",
      },
      "parentService": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/parentService",
      },
      "videoFormat": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/videoFormat",
      },
    },
    "title": "BroadcastService",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/BusinessEntityType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/BusinessEntityType",
    "description": "A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#Business</li>
<li>http://purl.org/goodrelations/v1#Enduser</li>
<li>http://purl.org/goodrelations/v1#PublicInstitution</li>
<li>http://purl.org/goodrelations/v1#Reseller</li>
</ul>
",
    "title": "BusinessEntityType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/BusinessFunction",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/BusinessFunction",
    "description": "The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>
<li>http://purl.org/goodrelations/v1#Dispose</li>
<li>http://purl.org/goodrelations/v1#LeaseOut</li>
<li>http://purl.org/goodrelations/v1#Maintain</li>
<li>http://purl.org/goodrelations/v1#ProvideService</li>
<li>http://purl.org/goodrelations/v1#Repair</li>
<li>http://purl.org/goodrelations/v1#Sell</li>
<li>http://purl.org/goodrelations/v1#Buy</li>
</ul>
",
    "title": "BusinessFunction",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Comment",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Comment",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class=\\"localLink\\" href=\\"http://schema.org/text\\">text</a> property, and its topic via <a class=\\"localLink\\" href=\\"http://schema.org/about\\">about</a>, properties shared with all CreativeWorks.",
    "properties": Object {
      "downvoteCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/downvoteCount",
      },
      "parentItem": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/parentItem",
      },
      "upvoteCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/upvoteCount",
      },
    },
    "title": "Comment",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ContactPoint",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ContactPoint",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A contact point&#x2014;for example, a Customer Complaints department.",
    "properties": Object {
      "areaServed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/areaServed",
      },
      "availableLanguage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availableLanguage",
      },
      "contactOption": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contactOption",
      },
      "contactType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contactType",
      },
      "email": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/email",
      },
      "faxNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/faxNumber",
      },
      "hoursAvailable": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hoursAvailable",
      },
      "productSupported": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/productSupported",
      },
      "serviceArea": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceArea",
      },
      "telephone": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/telephone",
      },
    },
    "title": "ContactPoint",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ContactPointOption",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ContactPointOption",
    "description": "Enumerated options related to a ContactPoint.",
    "enum": Array [
      "HearingImpairedSupported",
      "TollFree",
    ],
    "title": "ContactPointOption",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Country",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Country",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/AdministrativeArea",
      },
    ],
    "description": "A country.",
    "title": "Country",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/CreativeWork",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/CreativeWork",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "The most generic kind of creative work, including books, movies, photographs, software programs, etc.",
    "properties": Object {
      "about": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/about",
      },
      "accessMode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/accessMode",
      },
      "accessModeSufficient": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/accessModeSufficient",
      },
      "accessibilityAPI": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/accessibilityAPI",
      },
      "accessibilityControl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/accessibilityControl",
      },
      "accessibilityFeature": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/accessibilityFeature",
      },
      "accessibilityHazard": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/accessibilityHazard",
      },
      "accessibilitySummary": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/accessibilitySummary",
      },
      "accountablePerson": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/accountablePerson",
      },
      "aggregateRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating",
      },
      "alternativeHeadline": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/alternativeHeadline",
      },
      "associatedMedia": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/associatedMedia",
      },
      "audience": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/audience",
      },
      "audio": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/audio",
      },
      "author": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/author",
      },
      "award": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/award",
      },
      "awards": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/awards",
      },
      "character": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/character",
      },
      "citation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/citation",
      },
      "comment": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/comment",
      },
      "commentCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/commentCount",
      },
      "contentLocation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contentLocation",
      },
      "contentRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contentRating",
      },
      "contributor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contributor",
      },
      "copyrightHolder": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/copyrightHolder",
      },
      "copyrightYear": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/copyrightYear",
      },
      "creator": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/creator",
      },
      "dateCreated": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dateCreated",
      },
      "dateModified": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dateModified",
      },
      "datePublished": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/datePublished",
      },
      "discussionUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/discussionUrl",
      },
      "editor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/editor",
      },
      "educationalAlignment": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/educationalAlignment",
      },
      "educationalUse": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/educationalUse",
      },
      "encoding": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/encoding",
      },
      "encodingFormat": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/encodingFormat",
      },
      "encodings": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/encodings",
      },
      "exampleOfWork": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/exampleOfWork",
      },
      "expires": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/expires",
      },
      "fileFormat": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/fileFormat",
      },
      "funder": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/funder",
      },
      "genre": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/genre",
      },
      "hasPart": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hasPart",
      },
      "headline": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/headline",
      },
      "inLanguage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/inLanguage",
      },
      "interactionStatistic": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/interactionStatistic",
      },
      "interactivityType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/interactivityType",
      },
      "isAccessibleForFree": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isAccessibleForFree",
      },
      "isBasedOn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isBasedOn",
      },
      "isBasedOnUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isBasedOnUrl",
      },
      "isFamilyFriendly": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isFamilyFriendly",
      },
      "isPartOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isPartOf",
      },
      "keywords": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/keywords",
      },
      "learningResourceType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/learningResourceType",
      },
      "license": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/license",
      },
      "locationCreated": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/locationCreated",
      },
      "mainEntity": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/mainEntity",
      },
      "material": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/material",
      },
      "mentions": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/mentions",
      },
      "offers": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/offers",
      },
      "position": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/position",
      },
      "producer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/producer",
      },
      "provider": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/provider",
      },
      "publication": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/publication",
      },
      "publisher": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/publisher",
      },
      "publishingPrinciples": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/publishingPrinciples",
      },
      "recordedAt": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/recordedAt",
      },
      "releasedEvent": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/releasedEvent",
      },
      "review": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/review",
      },
      "reviews": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/reviews",
      },
      "schemaVersion": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/schemaVersion",
      },
      "sourceOrganization": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sourceOrganization",
      },
      "spatialCoverage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/spatialCoverage",
      },
      "sponsor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sponsor",
      },
      "temporalCoverage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/temporalCoverage",
      },
      "text": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/text",
      },
      "thumbnailUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/thumbnailUrl",
      },
      "timeRequired": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/timeRequired",
      },
      "translator": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/translator",
      },
      "typicalAgeRange": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/typicalAgeRange",
      },
      "version": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/version",
      },
      "video": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/video",
      },
      "workExample": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/workExample",
      },
    },
    "title": "CreativeWork",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DataCatalog",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DataCatalog",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A collection of datasets.",
    "properties": Object {
      "dataset": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dataset",
      },
    },
    "title": "DataCatalog",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DataDownload",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DataDownload",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MediaObject",
      },
    ],
    "description": "A dataset in downloadable form.",
    "title": "DataDownload",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DataFeed",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DataFeed",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Dataset",
      },
    ],
    "description": "A single feed providing structured information about one or more entities or topics.",
    "properties": Object {
      "dataFeedElement": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dataFeedElement",
      },
    },
    "title": "DataFeed",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DataFeedItem",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DataFeedItem",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "A single item within a larger data feed.",
    "properties": Object {
      "dateCreated": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dateCreated",
      },
      "dateDeleted": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dateDeleted",
      },
      "dateModified": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dateModified",
      },
      "item": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/item",
      },
    },
    "title": "DataFeedItem",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DataType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DataType",
    "description": "The basic data types such as Integers, Strings, etc.",
    "title": "DataType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Dataset",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Dataset",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A body of structured information describing some topic(s) of interest.",
    "properties": Object {
      "catalog": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/catalog",
      },
      "datasetTimeInterval": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/datasetTimeInterval",
      },
      "distribution": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/distribution",
      },
      "includedDataCatalog": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/includedDataCatalog",
      },
      "includedInDataCatalog": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/includedInDataCatalog",
      },
      "issn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/issn",
      },
      "spatial": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/spatial",
      },
      "temporal": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/temporal",
      },
    },
    "title": "Dataset",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Date",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Date",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataType",
      },
    ],
    "description": "A date value in <a href=\\"http://en.wikipedia.org/wiki/ISO_8601\\">ISO 8601 date format</a>.",
    "title": "Date",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DateTime",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DateTime",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataType",
      },
    ],
    "description": "A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).",
    "title": "DateTime",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DayOfWeek",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DayOfWeek",
    "description": "The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.<br/><br/>

Originally, URLs from <a href=\\"http://purl.org/goodrelations/v1\\">GoodRelations</a> were used (for <a class=\\"localLink\\" href=\\"http://schema.org/Monday\\">Monday</a>, <a class=\\"localLink\\" href=\\"http://schema.org/Tuesday\\">Tuesday</a>, <a class=\\"localLink\\" href=\\"http://schema.org/Wednesday\\">Wednesday</a>, <a class=\\"localLink\\" href=\\"http://schema.org/Thursday\\">Thursday</a>, <a class=\\"localLink\\" href=\\"http://schema.org/Friday\\">Friday</a>, <a class=\\"localLink\\" href=\\"http://schema.org/Saturday\\">Saturday</a>, <a class=\\"localLink\\" href=\\"http://schema.org/Sunday\\">Sunday</a> plus a special entry for <a class=\\"localLink\\" href=\\"http://schema.org/PublicHolidays\\">PublicHolidays</a>); these have now been integrated directly into schema.org.",
    "enum": Array [
      "Wednesday",
      "Sunday",
      "PublicHolidays",
      "Monday",
      "Friday",
      "Tuesday",
      "Saturday",
      "Thursday",
    ],
    "title": "DayOfWeek",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/DeliveryMethod",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/DeliveryMethod",
    "description": "A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>
<li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>
<li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>
<li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>
<li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>
<li>http://purl.org/goodrelations/v1#DHL</li>
<li>http://purl.org/goodrelations/v1#FederalExpress</li>
<li>http://purl.org/goodrelations/v1#UPS</li>
</ul>
",
    "enum": Array [
      "OnSitePickup",
    ],
    "title": "DeliveryMethod",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Demand",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Demand",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.",
    "properties": Object {
      "acceptedPaymentMethod": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/acceptedPaymentMethod",
      },
      "advanceBookingRequirement": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/advanceBookingRequirement",
      },
      "areaServed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/areaServed",
      },
      "availability": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availability",
      },
      "availabilityEnds": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availabilityEnds",
      },
      "availabilityStarts": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availabilityStarts",
      },
      "availableAtOrFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availableAtOrFrom",
      },
      "availableDeliveryMethod": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availableDeliveryMethod",
      },
      "businessFunction": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/businessFunction",
      },
      "deliveryLeadTime": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/deliveryLeadTime",
      },
      "eligibleCustomerType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleCustomerType",
      },
      "eligibleDuration": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleDuration",
      },
      "eligibleQuantity": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleQuantity",
      },
      "eligibleRegion": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleRegion",
      },
      "eligibleTransactionVolume": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume",
      },
      "gtin12": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin12",
      },
      "gtin13": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin13",
      },
      "gtin14": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin14",
      },
      "gtin8": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin8",
      },
      "includesObject": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/includesObject",
      },
      "ineligibleRegion": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/ineligibleRegion",
      },
      "inventoryLevel": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/inventoryLevel",
      },
      "itemCondition": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemCondition",
      },
      "itemOffered": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemOffered",
      },
      "mpn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/mpn",
      },
      "priceSpecification": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/priceSpecification",
      },
      "seller": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/seller",
      },
      "serialNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serialNumber",
      },
      "sku": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sku",
      },
      "validFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validFrom",
      },
      "validThrough": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validThrough",
      },
      "warranty": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/warranty",
      },
    },
    "title": "Demand",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Distance",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Distance",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Quantity",
      },
    ],
    "description": "Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.",
    "title": "Distance",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Duration",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Duration",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Quantity",
      },
    ],
    "description": "Quantity: Duration (use <a href=\\"http://en.wikipedia.org/wiki/ISO_8601\\">ISO 8601 duration format</a>).",
    "title": "Duration",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/EducationalOrganization",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/EducationalOrganization",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "description": "An educational organization.",
    "properties": Object {
      "alumni": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/alumni",
      },
    },
    "title": "EducationalOrganization",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/EntryPoint",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/EntryPoint",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "An entry point, within some Web-based protocol.",
    "properties": Object {
      "actionApplication": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/actionApplication",
      },
      "actionPlatform": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/actionPlatform",
      },
      "application": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/application",
      },
      "contentType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contentType",
      },
      "encodingType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/encodingType",
      },
      "httpMethod": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/httpMethod",
      },
      "urlTemplate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/urlTemplate",
      },
    },
    "title": "EntryPoint",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Enumeration",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Enumeration",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "Lists or enumerations—for example, a list of cuisines or music genres, etc.",
    "title": "Enumeration",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Event",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Event",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class=\\"localLink\\" href=\\"http://schema.org/offers\\">offers</a> property. Repeated events may be structured as separate Event objects.",
    "properties": Object {
      "about": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/about",
      },
      "actor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/actor",
      },
      "aggregateRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating",
      },
      "attendee": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/attendee",
      },
      "attendees": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/attendees",
      },
      "audience": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/audience",
      },
      "composer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/composer",
      },
      "contributor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contributor",
      },
      "director": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/director",
      },
      "doorTime": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/doorTime",
      },
      "duration": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/duration",
      },
      "endDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/endDate",
      },
      "eventStatus": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eventStatus",
      },
      "funder": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/funder",
      },
      "inLanguage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/inLanguage",
      },
      "isAccessibleForFree": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isAccessibleForFree",
      },
      "location": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/location",
      },
      "maximumAttendeeCapacity": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/maximumAttendeeCapacity",
      },
      "offers": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/offers",
      },
      "organizer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/organizer",
      },
      "performer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/performer",
      },
      "performers": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/performers",
      },
      "previousStartDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/previousStartDate",
      },
      "recordedIn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/recordedIn",
      },
      "remainingAttendeeCapacity": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/remainingAttendeeCapacity",
      },
      "review": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/review",
      },
      "sponsor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sponsor",
      },
      "startDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/startDate",
      },
      "subEvent": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/subEvent",
      },
      "subEvents": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/subEvents",
      },
      "superEvent": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/superEvent",
      },
      "translator": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/translator",
      },
      "typicalAgeRange": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/typicalAgeRange",
      },
      "workFeatured": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/workFeatured",
      },
      "workPerformed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/workPerformed",
      },
    },
    "title": "Event",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/EventStatusType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/EventStatusType",
    "description": "EventStatusType is an enumeration type whose instances represent several states that an Event may be in.",
    "enum": Array [
      "EventPostponed",
      "EventRescheduled",
      "EventScheduled",
      "EventCancelled",
    ],
    "title": "EventStatusType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/FinancialProduct",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/FinancialProduct",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Service",
      },
    ],
    "description": "A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.",
    "properties": Object {
      "annualPercentageRate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/annualPercentageRate",
      },
      "feesAndCommissionsSpecification": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/feesAndCommissionsSpecification",
      },
      "interestRate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/interestRate",
      },
    },
    "title": "FinancialProduct",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/GenderType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/GenderType",
    "description": "An enumeration of genders.",
    "enum": Array [
      "Male",
      "Female",
    ],
    "title": "GenderType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/GeoCoordinates",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/GeoCoordinates",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "The geographic coordinates of a place or event.",
    "properties": Object {
      "address": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/address",
      },
      "addressCountry": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/addressCountry",
      },
      "elevation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/elevation",
      },
      "latitude": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/latitude",
      },
      "longitude": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/longitude",
      },
      "postalCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/postalCode",
      },
    },
    "title": "GeoCoordinates",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/GeoShape",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/GeoShape",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.",
    "properties": Object {
      "address": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/address",
      },
      "addressCountry": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/addressCountry",
      },
      "box": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/box",
      },
      "circle": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/circle",
      },
      "elevation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/elevation",
      },
      "line": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/line",
      },
      "polygon": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/polygon",
      },
      "postalCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/postalCode",
      },
    },
    "title": "GeoShape",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ImageObject",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ImageObject",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MediaObject",
      },
    ],
    "description": "An image file.",
    "properties": Object {
      "caption": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/caption",
      },
      "exifData": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/exifData",
      },
      "representativeOfPage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/representativeOfPage",
      },
      "thumbnail": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/thumbnail",
      },
    },
    "title": "ImageObject",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Intangible",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Intangible",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.",
    "title": "Intangible",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Integer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Integer",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "description": "Data type: Integer.",
    "title": "Integer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/InteractionCounter",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/InteractionCounter",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.",
    "properties": Object {
      "interactionService": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/interactionService",
      },
      "interactionType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/interactionType",
      },
      "userInteractionCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/userInteractionCount",
      },
    },
    "title": "InteractionCounter",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ItemAvailability",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ItemAvailability",
    "description": "A list of possible product availability options.",
    "enum": Array [
      "SoldOut",
      "PreOrder",
      "OutOfStock",
      "PreSale",
      "InStock",
      "LimitedAvailability",
      "Discontinued",
      "OnlineOnly",
      "InStoreOnly",
    ],
    "title": "ItemAvailability",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ItemList",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ItemList",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.",
    "properties": Object {
      "itemListElement": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemListElement",
      },
      "itemListOrder": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemListOrder",
      },
      "numberOfItems": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/numberOfItems",
      },
    },
    "title": "ItemList",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ItemListOrderType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ItemListOrderType",
    "description": "Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.",
    "enum": Array [
      "ItemListOrderDescending",
      "ItemListUnordered",
      "ItemListOrderAscending",
    ],
    "title": "ItemListOrderType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Language",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Language",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href=\\"https://en.wikipedia.org/wiki/IETF_language_tag\\">BCP 47</a> can be used via the <a class=\\"localLink\\" href=\\"http://schema.org/alternateName\\">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class=\\"localLink\\" href=\\"http://schema.org/ComputerLanguage\\">ComputerLanguage</a>.",
    "title": "Language",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ListItem",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ListItem",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "An list item, e.g. a step in a checklist or how-to description.",
    "properties": Object {
      "item": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/item",
      },
      "nextItem": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/nextItem",
      },
      "position": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/position",
      },
      "previousItem": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/previousItem",
      },
    },
    "title": "ListItem",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/LoanOrCredit",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/LoanOrCredit",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/FinancialProduct",
      },
    ],
    "description": "A financial product for the loaning of an amount of money under agreed terms and charges.",
    "properties": Object {
      "amount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/amount",
      },
      "loanTerm": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/loanTerm",
      },
      "requiredCollateral": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/requiredCollateral",
      },
    },
    "title": "LoanOrCredit",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/LocationFeatureSpecification",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/LocationFeatureSpecification",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PropertyValue",
      },
    ],
    "description": "Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.",
    "properties": Object {
      "hoursAvailable": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hoursAvailable",
      },
      "validFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validFrom",
      },
      "validThrough": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validThrough",
      },
    },
    "title": "LocationFeatureSpecification",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Map",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Map",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A map.",
    "properties": Object {
      "mapType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/mapType",
      },
    },
    "title": "Map",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MapCategoryType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MapCategoryType",
    "description": "An enumeration of several kinds of Map.",
    "enum": Array [
      "ParkingMap",
      "SeatingMap",
      "VenueMap",
      "TransitMap",
    ],
    "title": "MapCategoryType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MediaObject",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MediaObject",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).",
    "properties": Object {
      "associatedArticle": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/associatedArticle",
      },
      "bitrate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/bitrate",
      },
      "contentSize": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contentSize",
      },
      "contentUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contentUrl",
      },
      "duration": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/duration",
      },
      "embedUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/embedUrl",
      },
      "encodesCreativeWork": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/encodesCreativeWork",
      },
      "encodingFormat": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/encodingFormat",
      },
      "height": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/height",
      },
      "playerType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/playerType",
      },
      "productionCompany": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/productionCompany",
      },
      "regionsAllowed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/regionsAllowed",
      },
      "requiresSubscription": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/requiresSubscription",
      },
      "uploadDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/uploadDate",
      },
      "width": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/width",
      },
    },
    "title": "MediaObject",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MonetaryAmount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MonetaryAmount",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class=\\"localLink\\" href=\\"http://schema.org/PriceSpecification\\">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc.",
    "properties": Object {
      "currency": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/currency",
      },
      "maxValue": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/maxValue",
      },
      "minValue": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/minValue",
      },
      "validFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validFrom",
      },
      "validThrough": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validThrough",
      },
      "value": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/value",
      },
    },
    "title": "MonetaryAmount",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicAlbum",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicAlbum",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicPlaylist",
      },
    ],
    "description": "A collection of music tracks.",
    "properties": Object {
      "albumProductionType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/albumProductionType",
      },
      "albumRelease": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/albumRelease",
      },
      "albumReleaseType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/albumReleaseType",
      },
      "byArtist": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/byArtist",
      },
    },
    "title": "MusicAlbum",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicAlbumProductionType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicAlbumProductionType",
    "description": "Classification of the album by it's type of content: soundtrack, live album, studio album, etc.",
    "enum": Array [
      "SoundtrackAlbum",
      "RemixAlbum",
      "DJMixAlbum",
      "LiveAlbum",
      "DemoAlbum",
      "SpokenWordAlbum",
      "CompilationAlbum",
      "StudioAlbum",
      "MixtapeAlbum",
    ],
    "title": "MusicAlbumProductionType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicAlbumReleaseType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicAlbumReleaseType",
    "description": "The kind of release which this album is: single, EP or album.",
    "enum": Array [
      "AlbumRelease",
      "EPRelease",
      "BroadcastRelease",
      "SingleRelease",
    ],
    "title": "MusicAlbumReleaseType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicComposition",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicComposition",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A musical composition.",
    "properties": Object {
      "composer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/composer",
      },
      "firstPerformance": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/firstPerformance",
      },
      "includedComposition": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/includedComposition",
      },
      "iswcCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/iswcCode",
      },
      "lyricist": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/lyricist",
      },
      "lyrics": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/lyrics",
      },
      "musicArrangement": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/musicArrangement",
      },
      "musicCompositionForm": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/musicCompositionForm",
      },
      "musicalKey": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/musicalKey",
      },
      "recordedAs": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/recordedAs",
      },
    },
    "title": "MusicComposition",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicGroup",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicGroup",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PerformingGroup",
      },
    ],
    "description": "A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.",
    "properties": Object {
      "album": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/album",
      },
      "albums": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/albums",
      },
      "genre": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/genre",
      },
      "musicGroupMember": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/musicGroupMember",
      },
      "track": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/track",
      },
      "tracks": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/tracks",
      },
    },
    "title": "MusicGroup",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicPlaylist",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicPlaylist",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A collection of music tracks in playlist form.",
    "properties": Object {
      "numTracks": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/numTracks",
      },
      "track": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/track",
      },
      "tracks": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/tracks",
      },
    },
    "title": "MusicPlaylist",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicRecording",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicRecording",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A music recording (track), usually a single song.",
    "properties": Object {
      "byArtist": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/byArtist",
      },
      "duration": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/duration",
      },
      "inAlbum": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/inAlbum",
      },
      "inPlaylist": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/inPlaylist",
      },
      "isrcCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isrcCode",
      },
      "recordingOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/recordingOf",
      },
    },
    "title": "MusicRecording",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicRelease",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicRelease",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicPlaylist",
      },
    ],
    "description": "A MusicRelease is a specific release of a music album.",
    "properties": Object {
      "catalogNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/catalogNumber",
      },
      "creditedTo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/creditedTo",
      },
      "duration": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/duration",
      },
      "musicReleaseFormat": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/musicReleaseFormat",
      },
      "recordLabel": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/recordLabel",
      },
      "releaseOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/releaseOf",
      },
    },
    "title": "MusicRelease",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/MusicReleaseFormatType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/MusicReleaseFormatType",
    "description": "Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).",
    "enum": Array [
      "DigitalAudioTapeFormat",
      "DigitalFormat",
      "CDFormat",
      "VinylFormat",
      "CassetteFormat",
      "LaserDiscFormat",
      "DVDFormat",
    ],
    "title": "MusicReleaseFormatType",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/NewsArticle",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/NewsArticle",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Article",
      },
    ],
    "description": "A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.<br/><br/>

A more detailed overview of <a href=\\"/docs/news.html\\">schema.org News markup</a> is also available.",
    "properties": Object {
      "dateline": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dateline",
      },
      "printColumn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/printColumn",
      },
      "printEdition": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/printEdition",
      },
      "printPage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/printPage",
      },
      "printSection": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/printSection",
      },
    },
    "title": "NewsArticle",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Number",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Number",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataType",
      },
    ],
    "description": "Data type: Number.",
    "title": "Number",
    "type": "number",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Offer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Offer",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.<br/><br/>

For <a href=\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\">GTIN</a>-related fields, see <a href=\\"http://www.gs1.org/barcodes/support/check_digit_calculator\\">Check Digit calculator</a> and <a href=\\"http://www.gs1us.org/resources/standards/gtin-validation-guide\\">validation guide</a> from <a href=\\"http://www.gs1.org/\\">GS1</a>.",
    "properties": Object {
      "acceptedPaymentMethod": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/acceptedPaymentMethod",
      },
      "addOn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/addOn",
      },
      "advanceBookingRequirement": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/advanceBookingRequirement",
      },
      "aggregateRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating",
      },
      "areaServed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/areaServed",
      },
      "availability": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availability",
      },
      "availabilityEnds": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availabilityEnds",
      },
      "availabilityStarts": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availabilityStarts",
      },
      "availableAtOrFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availableAtOrFrom",
      },
      "availableDeliveryMethod": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availableDeliveryMethod",
      },
      "businessFunction": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/businessFunction",
      },
      "category": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/category",
      },
      "deliveryLeadTime": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/deliveryLeadTime",
      },
      "eligibleCustomerType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleCustomerType",
      },
      "eligibleDuration": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleDuration",
      },
      "eligibleQuantity": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleQuantity",
      },
      "eligibleRegion": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleRegion",
      },
      "eligibleTransactionVolume": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume",
      },
      "gtin12": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin12",
      },
      "gtin13": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin13",
      },
      "gtin14": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin14",
      },
      "gtin8": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin8",
      },
      "includesObject": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/includesObject",
      },
      "ineligibleRegion": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/ineligibleRegion",
      },
      "inventoryLevel": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/inventoryLevel",
      },
      "itemCondition": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemCondition",
      },
      "itemOffered": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemOffered",
      },
      "mpn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/mpn",
      },
      "offeredBy": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/offeredBy",
      },
      "price": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/price",
      },
      "priceCurrency": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/priceCurrency",
      },
      "priceSpecification": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/priceSpecification",
      },
      "priceValidUntil": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/priceValidUntil",
      },
      "review": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/review",
      },
      "reviews": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/reviews",
      },
      "seller": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/seller",
      },
      "serialNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serialNumber",
      },
      "sku": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sku",
      },
      "validFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validFrom",
      },
      "validThrough": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validThrough",
      },
      "warranty": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/warranty",
      },
    },
    "title": "Offer",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/OfferCatalog",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/OfferCatalog",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ItemList",
      },
    ],
    "description": "An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.",
    "title": "OfferCatalog",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/OfferItemCondition",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/OfferItemCondition",
    "description": "A list of possible conditions for the item.",
    "enum": Array [
      "DamagedCondition",
      "RefurbishedCondition",
      "UsedCondition",
      "NewCondition",
    ],
    "title": "OfferItemCondition",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/OpeningHoursSpecification",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/OpeningHoursSpecification",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A structured value providing information about the opening hours of a place or a certain service inside a place.<br/><br/>

The place is <strong>open</strong> if the <a class=\\"localLink\\" href=\\"http://schema.org/opens\\">opens</a> property is specified, and <strong>closed</strong> otherwise.<br/><br/>

If the value for the <a class=\\"localLink\\" href=\\"http://schema.org/closes\\">closes</a> property is less than the value for the <a class=\\"localLink\\" href=\\"http://schema.org/opens\\">opens</a> property then the hour range is assumed to span over the next day.",
    "properties": Object {
      "closes": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/closes",
      },
      "dayOfWeek": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dayOfWeek",
      },
      "opens": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/opens",
      },
      "validFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validFrom",
      },
      "validThrough": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validThrough",
      },
    },
    "title": "OpeningHoursSpecification",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Organization",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Organization",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "An organization such as a school, NGO, corporation, club, etc.",
    "properties": Object {
      "address": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/address",
      },
      "aggregateRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating",
      },
      "alumni": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/alumni",
      },
      "areaServed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/areaServed",
      },
      "award": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/award",
      },
      "awards": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/awards",
      },
      "brand": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/brand",
      },
      "contactPoint": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contactPoint",
      },
      "contactPoints": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contactPoints",
      },
      "department": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/department",
      },
      "dissolutionDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/dissolutionDate",
      },
      "duns": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/duns",
      },
      "email": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/email",
      },
      "employee": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/employee",
      },
      "employees": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/employees",
      },
      "event": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/event",
      },
      "events": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/events",
      },
      "faxNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/faxNumber",
      },
      "founder": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/founder",
      },
      "founders": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/founders",
      },
      "foundingDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/foundingDate",
      },
      "foundingLocation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/foundingLocation",
      },
      "funder": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/funder",
      },
      "globalLocationNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/globalLocationNumber",
      },
      "hasOfferCatalog": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hasOfferCatalog",
      },
      "hasPOS": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hasPOS",
      },
      "isicV4": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isicV4",
      },
      "legalName": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/legalName",
      },
      "leiCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/leiCode",
      },
      "location": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/location",
      },
      "logo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/logo",
      },
      "makesOffer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/makesOffer",
      },
      "member": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/member",
      },
      "memberOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/memberOf",
      },
      "members": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/members",
      },
      "naics": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/naics",
      },
      "numberOfEmployees": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/numberOfEmployees",
      },
      "owns": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/owns",
      },
      "parentOrganization": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/parentOrganization",
      },
      "publishingPrinciples": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/publishingPrinciples",
      },
      "review": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/review",
      },
      "reviews": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/reviews",
      },
      "seeks": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/seeks",
      },
      "serviceArea": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceArea",
      },
      "sponsor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sponsor",
      },
      "subOrganization": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/subOrganization",
      },
      "taxID": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/taxID",
      },
      "telephone": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/telephone",
      },
      "vatID": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/vatID",
      },
    },
    "title": "Organization",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/OwnershipInfo",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/OwnershipInfo",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A structured value providing information about when a certain organization or person owned a certain product.",
    "properties": Object {
      "acquiredFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/acquiredFrom",
      },
      "ownedFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/ownedFrom",
      },
      "ownedThrough": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/ownedThrough",
      },
      "typeOfGood": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/typeOfGood",
      },
    },
    "title": "OwnershipInfo",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/PaymentMethod",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/PaymentMethod",
    "description": "A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>
<li>http://purl.org/goodrelations/v1#ByInvoice</li>
<li>http://purl.org/goodrelations/v1#Cash</li>
<li>http://purl.org/goodrelations/v1#CheckInAdvance</li>
<li>http://purl.org/goodrelations/v1#COD</li>
<li>http://purl.org/goodrelations/v1#DirectDebit</li>
<li>http://purl.org/goodrelations/v1#GoogleCheckout</li>
<li>http://purl.org/goodrelations/v1#PayPal</li>
<li>http://purl.org/goodrelations/v1#PaySwarm</li>
</ul>
",
    "title": "PaymentMethod",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/PerformingGroup",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/PerformingGroup",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "description": "A performance group, such as a band, an orchestra, or a circus.",
    "title": "PerformingGroup",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Person",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Person",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "A person (alive, dead, undead, or fictional).",
    "properties": Object {
      "additionalName": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/additionalName",
      },
      "address": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/address",
      },
      "affiliation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/affiliation",
      },
      "alumniOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/alumniOf",
      },
      "award": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/award",
      },
      "awards": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/awards",
      },
      "birthDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/birthDate",
      },
      "birthPlace": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/birthPlace",
      },
      "brand": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/brand",
      },
      "children": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/children",
      },
      "colleague": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/colleague",
      },
      "colleagues": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/colleagues",
      },
      "contactPoint": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contactPoint",
      },
      "contactPoints": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/contactPoints",
      },
      "deathDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/deathDate",
      },
      "deathPlace": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/deathPlace",
      },
      "duns": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/duns",
      },
      "email": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/email",
      },
      "familyName": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/familyName",
      },
      "faxNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/faxNumber",
      },
      "follows": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/follows",
      },
      "funder": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/funder",
      },
      "gender": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gender",
      },
      "givenName": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/givenName",
      },
      "globalLocationNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/globalLocationNumber",
      },
      "hasOfferCatalog": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hasOfferCatalog",
      },
      "hasPOS": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hasPOS",
      },
      "height": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/height",
      },
      "homeLocation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/homeLocation",
      },
      "honorificPrefix": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/honorificPrefix",
      },
      "honorificSuffix": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/honorificSuffix",
      },
      "isicV4": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isicV4",
      },
      "jobTitle": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/jobTitle",
      },
      "knows": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/knows",
      },
      "makesOffer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/makesOffer",
      },
      "memberOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/memberOf",
      },
      "naics": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/naics",
      },
      "nationality": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/nationality",
      },
      "netWorth": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/netWorth",
      },
      "owns": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/owns",
      },
      "parent": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/parent",
      },
      "parents": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/parents",
      },
      "performerIn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/performerIn",
      },
      "publishingPrinciples": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/publishingPrinciples",
      },
      "relatedTo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/relatedTo",
      },
      "seeks": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/seeks",
      },
      "sibling": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sibling",
      },
      "siblings": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/siblings",
      },
      "sponsor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sponsor",
      },
      "spouse": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/spouse",
      },
      "taxID": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/taxID",
      },
      "telephone": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/telephone",
      },
      "vatID": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/vatID",
      },
      "weight": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/weight",
      },
      "workLocation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/workLocation",
      },
      "worksFor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/worksFor",
      },
    },
    "title": "Person",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Photograph",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Photograph",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A photograph.",
    "title": "Photograph",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Place",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Place",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "Entities that have a somewhat fixed, physical extension.",
    "properties": Object {
      "additionalProperty": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/additionalProperty",
      },
      "address": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/address",
      },
      "aggregateRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating",
      },
      "amenityFeature": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/amenityFeature",
      },
      "branchCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/branchCode",
      },
      "containedIn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/containedIn",
      },
      "containedInPlace": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/containedInPlace",
      },
      "containsPlace": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/containsPlace",
      },
      "event": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/event",
      },
      "events": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/events",
      },
      "faxNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/faxNumber",
      },
      "geo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/geo",
      },
      "globalLocationNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/globalLocationNumber",
      },
      "hasMap": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hasMap",
      },
      "isAccessibleForFree": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isAccessibleForFree",
      },
      "isicV4": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isicV4",
      },
      "logo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/logo",
      },
      "map": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/map",
      },
      "maps": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/maps",
      },
      "maximumAttendeeCapacity": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/maximumAttendeeCapacity",
      },
      "openingHoursSpecification": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/openingHoursSpecification",
      },
      "photo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/photo",
      },
      "photos": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/photos",
      },
      "publicAccess": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/publicAccess",
      },
      "review": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/review",
      },
      "reviews": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/reviews",
      },
      "smokingAllowed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/smokingAllowed",
      },
      "specialOpeningHoursSpecification": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/specialOpeningHoursSpecification",
      },
      "telephone": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/telephone",
      },
    },
    "title": "Place",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/PostalAddress",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/PostalAddress",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ContactPoint",
      },
    ],
    "description": "The mailing address.",
    "properties": Object {
      "addressCountry": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/addressCountry",
      },
      "addressLocality": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/addressLocality",
      },
      "addressRegion": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/addressRegion",
      },
      "postOfficeBoxNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/postOfficeBoxNumber",
      },
      "postalCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/postalCode",
      },
      "streetAddress": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/streetAddress",
      },
    },
    "title": "PostalAddress",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/PriceSpecification",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/PriceSpecification",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class=\\"localLink\\" href=\\"http://schema.org/MonetaryAmount\\">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc.",
    "properties": Object {
      "eligibleQuantity": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleQuantity",
      },
      "eligibleTransactionVolume": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume",
      },
      "maxPrice": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/maxPrice",
      },
      "minPrice": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/minPrice",
      },
      "price": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/price",
      },
      "priceCurrency": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/priceCurrency",
      },
      "validFrom": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validFrom",
      },
      "validThrough": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/validThrough",
      },
      "valueAddedTaxIncluded": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/valueAddedTaxIncluded",
      },
    },
    "title": "PriceSpecification",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Product",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Product",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "description": "Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.",
    "properties": Object {
      "additionalProperty": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/additionalProperty",
      },
      "aggregateRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating",
      },
      "audience": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/audience",
      },
      "award": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/award",
      },
      "awards": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/awards",
      },
      "brand": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/brand",
      },
      "category": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/category",
      },
      "color": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/color",
      },
      "depth": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/depth",
      },
      "gtin12": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin12",
      },
      "gtin13": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin13",
      },
      "gtin14": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin14",
      },
      "gtin8": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/gtin8",
      },
      "height": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/height",
      },
      "isAccessoryOrSparePartFor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isAccessoryOrSparePartFor",
      },
      "isConsumableFor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isConsumableFor",
      },
      "isRelatedTo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isRelatedTo",
      },
      "isSimilarTo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isSimilarTo",
      },
      "itemCondition": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemCondition",
      },
      "logo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/logo",
      },
      "manufacturer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/manufacturer",
      },
      "material": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/material",
      },
      "model": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/model",
      },
      "mpn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/mpn",
      },
      "offers": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/offers",
      },
      "productID": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/productID",
      },
      "productionDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/productionDate",
      },
      "purchaseDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/purchaseDate",
      },
      "releaseDate": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/releaseDate",
      },
      "review": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/review",
      },
      "reviews": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/reviews",
      },
      "sku": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sku",
      },
      "weight": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/weight",
      },
      "width": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/width",
      },
    },
    "title": "Product",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ProductModel",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ProductModel",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
    ],
    "description": "A datasheet or vendor specification of a product (in the sense of a prototypical description).",
    "properties": Object {
      "isVariantOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isVariantOf",
      },
      "predecessorOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/predecessorOf",
      },
      "successorOf": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/successorOf",
      },
    },
    "title": "ProductModel",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ProgramMembership",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ProgramMembership",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "Used to describe membership in a loyalty programs (e.g. \\"StarAliance\\"), traveler clubs (e.g. \\"AAA\\"), purchase clubs (\\"Safeway Club\\"), etc.",
    "properties": Object {
      "hostingOrganization": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hostingOrganization",
      },
      "member": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/member",
      },
      "members": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/members",
      },
      "membershipNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/membershipNumber",
      },
      "programName": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/programName",
      },
    },
    "title": "ProgramMembership",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/PropertyValue",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/PropertyValue",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.<br/><br/>

Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.",
    "properties": Object {
      "maxValue": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/maxValue",
      },
      "minValue": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/minValue",
      },
      "propertyID": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/propertyID",
      },
      "unitCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/unitCode",
      },
      "unitText": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/unitText",
      },
      "value": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/value",
      },
      "valueReference": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/valueReference",
      },
    },
    "title": "PropertyValue",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/PublicationEvent",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/PublicationEvent",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "description": "A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.",
    "properties": Object {
      "free": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/free",
      },
      "isAccessibleForFree": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isAccessibleForFree",
      },
      "publishedOn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/publishedOn",
      },
    },
    "title": "PublicationEvent",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/QualitativeValue",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/QualitativeValue",
    "description": "A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.",
    "properties": Object {
      "additionalProperty": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/additionalProperty",
      },
      "equal": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/equal",
      },
      "greater": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/greater",
      },
      "greaterOrEqual": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/greaterOrEqual",
      },
      "lesser": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/lesser",
      },
      "lesserOrEqual": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/lesserOrEqual",
      },
      "nonEqual": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/nonEqual",
      },
      "valueReference": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/valueReference",
      },
    },
    "title": "QualitativeValue",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/QuantitativeValue",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/QuantitativeValue",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A point value or interval for product characteristics and other purposes.",
    "properties": Object {
      "additionalProperty": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/additionalProperty",
      },
      "maxValue": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/maxValue",
      },
      "minValue": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/minValue",
      },
      "unitCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/unitCode",
      },
      "unitText": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/unitText",
      },
      "value": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/value",
      },
      "valueReference": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/valueReference",
      },
    },
    "title": "QuantitativeValue",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Quantity",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Quantity",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.",
    "title": "Quantity",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Question",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Question",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
    "properties": Object {
      "acceptedAnswer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/acceptedAnswer",
      },
      "answerCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/answerCount",
      },
      "downvoteCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/downvoteCount",
      },
      "suggestedAnswer": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/suggestedAnswer",
      },
      "upvoteCount": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/upvoteCount",
      },
    },
    "title": "Question",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Rating",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Rating",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "A rating is an evaluation on a numeric scale, such as 1 to 5 stars.",
    "properties": Object {
      "author": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/author",
      },
      "bestRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/bestRating",
      },
      "ratingValue": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/ratingValue",
      },
      "worstRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/worstRating",
      },
    },
    "title": "Rating",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Review",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Review",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A review of an item - for example, of a restaurant, movie, or store.",
    "properties": Object {
      "itemReviewed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/itemReviewed",
      },
      "reviewBody": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/reviewBody",
      },
      "reviewRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/reviewRating",
      },
    },
    "title": "Review",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Service",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Service",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "A service provided by an organization, e.g. delivery service, print services, etc.",
    "properties": Object {
      "aggregateRating": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating",
      },
      "areaServed": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/areaServed",
      },
      "audience": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/audience",
      },
      "availableChannel": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availableChannel",
      },
      "award": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/award",
      },
      "brand": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/brand",
      },
      "broker": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/broker",
      },
      "category": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/category",
      },
      "hasOfferCatalog": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hasOfferCatalog",
      },
      "hoursAvailable": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/hoursAvailable",
      },
      "isRelatedTo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isRelatedTo",
      },
      "isSimilarTo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/isSimilarTo",
      },
      "logo": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/logo",
      },
      "offers": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/offers",
      },
      "produces": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/produces",
      },
      "provider": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/provider",
      },
      "providerMobility": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/providerMobility",
      },
      "review": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/review",
      },
      "serviceArea": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceArea",
      },
      "serviceAudience": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceAudience",
      },
      "serviceOutput": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceOutput",
      },
      "serviceType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceType",
      },
    },
    "title": "Service",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/ServiceChannel",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ServiceChannel",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "A means for accessing a service, e.g. a government office location, web site, or phone number.",
    "properties": Object {
      "availableLanguage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availableLanguage",
      },
      "processingTime": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/processingTime",
      },
      "providesService": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/providesService",
      },
      "serviceLocation": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceLocation",
      },
      "servicePhone": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/servicePhone",
      },
      "servicePostalAddress": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/servicePostalAddress",
      },
      "serviceSmsNumber": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceSmsNumber",
      },
      "serviceUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/serviceUrl",
      },
    },
    "title": "ServiceChannel",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/SoftwareApplication",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/SoftwareApplication",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A software application.",
    "properties": Object {
      "applicationCategory": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/applicationCategory",
      },
      "applicationSubCategory": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/applicationSubCategory",
      },
      "applicationSuite": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/applicationSuite",
      },
      "availableOnDevice": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/availableOnDevice",
      },
      "countriesNotSupported": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/countriesNotSupported",
      },
      "countriesSupported": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/countriesSupported",
      },
      "device": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/device",
      },
      "downloadUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/downloadUrl",
      },
      "featureList": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/featureList",
      },
      "fileSize": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/fileSize",
      },
      "installUrl": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/installUrl",
      },
      "memoryRequirements": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/memoryRequirements",
      },
      "operatingSystem": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/operatingSystem",
      },
      "permissions": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/permissions",
      },
      "processorRequirements": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/processorRequirements",
      },
      "releaseNotes": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/releaseNotes",
      },
      "requirements": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/requirements",
      },
      "screenshot": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/screenshot",
      },
      "softwareAddOn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/softwareAddOn",
      },
      "softwareHelp": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/softwareHelp",
      },
      "softwareRequirements": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/softwareRequirements",
      },
      "softwareVersion": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/softwareVersion",
      },
      "storageRequirements": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/storageRequirements",
      },
      "supportingData": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/supportingData",
      },
    },
    "title": "SoftwareApplication",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/StructuredValue",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/StructuredValue",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Intangible",
      },
    ],
    "description": "Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.",
    "title": "StructuredValue",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Text",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Text",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataType",
      },
    ],
    "description": "Data type: Text.",
    "title": "Text",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Thing",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Thing",
    "description": "The most generic type of item.",
    "properties": Object {
      "additionalType": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/additionalType",
      },
      "alternateName": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/alternateName",
      },
      "description": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/description",
      },
      "disambiguatingDescription": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/disambiguatingDescription",
      },
      "identifier": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/identifier",
      },
      "image": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/image",
      },
      "mainEntityOfPage": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/mainEntityOfPage",
      },
      "name": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/name",
      },
      "potentialAction": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/potentialAction",
      },
      "sameAs": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/sameAs",
      },
      "url": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/url",
      },
    },
    "title": "Thing",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/Time",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/Time",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataType",
      },
    ],
    "description": "A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href=\\"http://www.w3.org/TR/xmlschema-2/#time\\">XML schema for details</a>).",
    "title": "Time",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/TypeAndQuantityNode",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/TypeAndQuantityNode",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.",
    "properties": Object {
      "amountOfThisGood": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/amountOfThisGood",
      },
      "businessFunction": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/businessFunction",
      },
      "typeOfGood": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/typeOfGood",
      },
      "unitCode": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/unitCode",
      },
      "unitText": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/unitText",
      },
    },
    "title": "TypeAndQuantityNode",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/URL",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/URL",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "description": "Data type: URL.",
    "title": "URL",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/VideoObject",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/VideoObject",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MediaObject",
      },
    ],
    "description": "A video file.",
    "properties": Object {
      "actor": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/actor",
      },
      "actors": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/actors",
      },
      "caption": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/caption",
      },
      "director": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/director",
      },
      "directors": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/directors",
      },
      "musicBy": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/musicBy",
      },
      "thumbnail": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/thumbnail",
      },
      "transcript": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/transcript",
      },
      "videoFrameSize": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/videoFrameSize",
      },
      "videoQuality": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/videoQuality",
      },
    },
    "title": "VideoObject",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/WarrantyPromise",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/WarrantyPromise",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "description": "A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.",
    "properties": Object {
      "durationOfWarranty": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/durationOfWarranty",
      },
      "warrantyScope": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/warrantyScope",
      },
    },
    "title": "WarrantyPromise",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/WarrantyScope",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/WarrantyScope",
    "description": "A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.<br/><br/>

Commonly used values:<br/><br/>

<ul>
<li>http://purl.org/goodrelations/v1#Labor-BringIn</li>
<li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>
<li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>
</ul>
",
    "title": "WarrantyScope",
    "type": "string",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/WebSite",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/WebSite",
    "allOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "description": "A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.",
    "properties": Object {
      "issn": Object {
        "$ref": "http://supermodel.io/schemaorg/properties/issn",
      },
    },
    "title": "WebSite",
    "type": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/about",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/about",
    "description": "The subject matter of the content.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "about",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/acceptedAnswer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/acceptedAnswer",
    "description": "The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ItemList",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Answer",
      },
    ],
    "title": "acceptedAnswer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/acceptedPaymentMethod",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/acceptedPaymentMethod",
    "description": "The payment method(s) accepted by seller for this offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PaymentMethod",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/LoanOrCredit",
      },
    ],
    "title": "acceptedPaymentMethod",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/accessMode",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/accessMode",
    "description": "The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "accessMode",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/accessModeSufficient",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/accessModeSufficient",
    "description": "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "accessModeSufficient",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/accessibilityAPI",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/accessibilityAPI",
    "description": "Indicates that the resource is compatible with the referenced accessibility API (<a href=\\"http://www.w3.org/wiki/WebSchemas/Accessibility\\">WebSchemas wiki lists possible values</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "accessibilityAPI",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/accessibilityControl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/accessibilityControl",
    "description": "Identifies input methods that are sufficient to fully control the described resource (<a href=\\"http://www.w3.org/wiki/WebSchemas/Accessibility\\">WebSchemas wiki lists possible values</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "accessibilityControl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/accessibilityFeature",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/accessibilityFeature",
    "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href=\\"http://www.w3.org/wiki/WebSchemas/Accessibility\\">WebSchemas wiki lists possible values</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "accessibilityFeature",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/accessibilityHazard",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/accessibilityHazard",
    "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href=\\"http://www.w3.org/wiki/WebSchemas/Accessibility\\">WebSchemas wiki lists possible values</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "accessibilityHazard",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/accessibilitySummary",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/accessibilitySummary",
    "description": "A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \\"short descriptions are present but long descriptions will be needed for non-visual users\\" or \\"short descriptions are present and no long descriptions are needed.\\"",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "accessibilitySummary",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/accountablePerson",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/accountablePerson",
    "description": "Specifies the Person that is legally accountable for the CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "accountablePerson",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/acquiredFrom",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/acquiredFrom",
    "description": "The organization or person from which the product was acquired.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "acquiredFrom",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/actionApplication",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/actionApplication",
    "description": "An application that can complete the request.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/SoftwareApplication",
      },
    ],
    "title": "actionApplication",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/actionPlatform",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/actionPlatform",
    "description": "The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "actionPlatform",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/actionStatus",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/actionStatus",
    "description": "Indicates the current disposition of the Action.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ActionStatusType",
      },
    ],
    "title": "actionStatus",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/actor",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/actor",
    "description": "An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "actor",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/actors",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/actors",
    "description": "An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "actors",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/addOn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/addOn",
    "description": "An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Offer",
      },
    ],
    "title": "addOn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/additionalName",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/additionalName",
    "description": "An additional name for a Person, can be used for a middle name.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "additionalName",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/additionalProperty",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/additionalProperty",
    "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>

Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PropertyValue",
      },
    ],
    "title": "additionalProperty",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/additionalType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/additionalType",
    "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "additionalType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/address",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/address",
    "description": "Physical address of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PostalAddress",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "address",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/addressCountry",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/addressCountry",
    "description": "The country. For example, USA. You can also provide the two-letter <a href=\\"http://en.wikipedia.org/wiki/ISO_3166-1\\">ISO 3166-1 alpha-2 country code</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Country",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "addressCountry",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/addressLocality",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/addressLocality",
    "description": "The locality. For example, Mountain View.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "addressLocality",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/addressRegion",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/addressRegion",
    "description": "The region. For example, CA.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "addressRegion",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/advanceBookingRequirement",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/advanceBookingRequirement",
    "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "advanceBookingRequirement",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/affiliation",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/affiliation",
    "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "affiliation",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/agent",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/agent",
    "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "agent",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/aggregateRating",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/aggregateRating",
    "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/AggregateRating",
      },
    ],
    "title": "aggregateRating",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/album",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/album",
    "description": "A music album.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicAlbum",
      },
    ],
    "title": "album",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/albumProductionType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/albumProductionType",
    "description": "Classification of the album by it's type of content: soundtrack, live album, studio album, etc.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicAlbumProductionType",
      },
    ],
    "title": "albumProductionType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/albumRelease",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/albumRelease",
    "description": "A release of this album.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicRelease",
      },
    ],
    "title": "albumRelease",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/albumReleaseType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/albumReleaseType",
    "description": "The kind of release which this album is: single, EP or album.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicAlbumReleaseType",
      },
    ],
    "title": "albumReleaseType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/albums",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/albums",
    "description": "A collection of music albums.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicAlbum",
      },
    ],
    "title": "albums",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/alignmentType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/alignmentType",
    "description": "A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "alignmentType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/alternateName",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/alternateName",
    "description": "An alias for the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "alternateName",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/alternativeHeadline",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/alternativeHeadline",
    "description": "A secondary title of the CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "alternativeHeadline",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/alumni",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/alumni",
    "description": "Alumni of an organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "alumni",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/alumniOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/alumniOf",
    "description": "An organization that the person is an alumni of.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/EducationalOrganization",
      },
    ],
    "title": "alumniOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/amenityFeature",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/amenityFeature",
    "description": "An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/LocationFeatureSpecification",
      },
    ],
    "title": "amenityFeature",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/amount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/amount",
    "description": "The amount of money.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MonetaryAmount",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "amount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/amountOfThisGood",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/amountOfThisGood",
    "description": "The quantity of the goods included in the offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "amountOfThisGood",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/annualPercentageRate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/annualPercentageRate",
    "description": "The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "annualPercentageRate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/answerCount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/answerCount",
    "description": "The number of answers this question has received.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "answerCount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/application",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/application",
    "description": "An application that can complete the request.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/SoftwareApplication",
      },
    ],
    "title": "application",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/applicationCategory",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/applicationCategory",
    "description": "Type of software application, e.g. 'Game, Multimedia'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "applicationCategory",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/applicationSubCategory",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/applicationSubCategory",
    "description": "Subcategory of the application, e.g. 'Arcade Game'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "applicationSubCategory",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/applicationSuite",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/applicationSuite",
    "description": "The name of the application suite to which the application belongs (e.g. Excel belongs to Office).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "applicationSuite",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/area",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/area",
    "description": "The area within which users can expect to reach the broadcast service.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "area",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/areaServed",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/areaServed",
    "description": "The geographic area where a service or offered item is provided.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/AdministrativeArea",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/GeoShape",
      },
    ],
    "title": "areaServed",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/articleBody",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/articleBody",
    "description": "The actual body of the article.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "articleBody",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/articleSection",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/articleSection",
    "description": "Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "articleSection",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/associatedArticle",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/associatedArticle",
    "description": "A NewsArticle associated with the Media Object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/NewsArticle",
      },
    ],
    "title": "associatedArticle",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/associatedMedia",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/associatedMedia",
    "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MediaObject",
      },
    ],
    "title": "associatedMedia",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/attendee",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/attendee",
    "description": "A person or organization attending the event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "attendee",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/attendees",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/attendees",
    "description": "A person attending the event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "attendees",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/audience",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/audience",
    "description": "An intended audience, i.e. a group for whom something was created.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Audience",
      },
    ],
    "title": "audience",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/audienceType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/audienceType",
    "description": "The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "audienceType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/audio",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/audio",
    "description": "An embedded audio object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/AudioObject",
      },
    ],
    "title": "audio",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/author",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/author",
    "description": "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "author",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/availability",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/availability",
    "description": "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ItemAvailability",
      },
    ],
    "title": "availability",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/availabilityEnds",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/availabilityEnds",
    "description": "The end of the availability of the product or service included in the offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "availabilityEnds",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/availabilityStarts",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/availabilityStarts",
    "description": "The beginning of the availability of the product or service included in the offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "availabilityStarts",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/availableAtOrFrom",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/availableAtOrFrom",
    "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "availableAtOrFrom",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/availableChannel",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/availableChannel",
    "description": "A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ServiceChannel",
      },
    ],
    "title": "availableChannel",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/availableDeliveryMethod",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/availableDeliveryMethod",
    "description": "The delivery method(s) available for this offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DeliveryMethod",
      },
    ],
    "title": "availableDeliveryMethod",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/availableLanguage",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/availableLanguage",
    "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href=\\"http://tools.ietf.org/html/bcp47\\">IETF BCP 47 standard</a>. See also <a class=\\"localLink\\" href=\\"http://schema.org/inLanguage\\">inLanguage</a>",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Language",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "availableLanguage",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/availableOnDevice",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/availableOnDevice",
    "description": "Device required to run the application. Used in cases where a specific make/model is required to run the application.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "availableOnDevice",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/award",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/award",
    "description": "An award won by or for this item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "award",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/awards",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/awards",
    "description": "Awards won by or for this item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "awards",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/bestRating",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/bestRating",
    "description": "The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "bestRating",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/birthDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/birthDate",
    "description": "Date of birth.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "birthDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/birthPlace",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/birthPlace",
    "description": "The place where the person was born.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "birthPlace",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/bitrate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/bitrate",
    "description": "The bitrate of the media object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "bitrate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/box",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/box",
    "description": "A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "box",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/branchCode",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/branchCode",
    "description": "A short textual code (also called \\"store code\\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>

For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \\"3047\\" is a branchCode for a particular branch.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "branchCode",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/brand",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/brand",
    "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Brand",
      },
    ],
    "title": "brand",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/broadcastAffiliateOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/broadcastAffiliateOf",
    "description": "The media network(s) whose content is broadcast on this station.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "broadcastAffiliateOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/broadcastDisplayName",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/broadcastDisplayName",
    "description": "The name displayed in the channel guide. For many US affiliates, it is the network name.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "broadcastDisplayName",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/broadcastTimezone",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/broadcastTimezone",
    "description": "The timezone in <a href=\\"http://en.wikipedia.org/wiki/ISO_8601\\">ISO 8601 format</a> for which the service bases its broadcasts",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "broadcastTimezone",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/broadcaster",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/broadcaster",
    "description": "The organization owning or operating the broadcast service.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "broadcaster",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/broker",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/broker",
    "description": "An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "broker",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/businessFunction",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/businessFunction",
    "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/BusinessFunction",
      },
    ],
    "title": "businessFunction",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/byArtist",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/byArtist",
    "description": "The artist that performed this album or recording.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicGroup",
      },
    ],
    "title": "byArtist",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/caption",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/caption",
    "description": "The caption for this object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "caption",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/catalog",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/catalog",
    "description": "A data catalog which contains this dataset.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataCatalog",
      },
    ],
    "title": "catalog",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/catalogNumber",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/catalogNumber",
    "description": "The catalog number for the release.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "catalogNumber",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/category",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/category",
    "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "category",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/character",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/character",
    "description": "Fictional person connected with a creative work.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "character",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/children",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/children",
    "description": "A child of the person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "children",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/circle",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/circle",
    "description": "A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "circle",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/citation",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/citation",
    "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "citation",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/closes",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/closes",
    "description": "The closing hour of the place or service on the given day(s) of the week.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Time",
      },
    ],
    "title": "closes",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/colleague",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/colleague",
    "description": "A colleague of the person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "colleague",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/colleagues",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/colleagues",
    "description": "A colleague of the person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "colleagues",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/color",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/color",
    "description": "The color of the product.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "color",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/comment",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/comment",
    "description": "Comments, typically from users.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Comment",
      },
    ],
    "title": "comment",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/commentCount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/commentCount",
    "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "commentCount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/composer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/composer",
    "description": "The person or organization who wrote a composition, or who is the composer of a work performed at some event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "composer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contactOption",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contactOption",
    "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ContactPointOption",
      },
    ],
    "title": "contactOption",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contactPoint",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contactPoint",
    "description": "A contact point for a person or organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ContactPoint",
      },
    ],
    "title": "contactPoint",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contactPoints",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contactPoints",
    "description": "A contact point for a person or organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ContactPoint",
      },
    ],
    "title": "contactPoints",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contactType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contactType",
    "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "contactType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/containedIn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/containedIn",
    "description": "The basic containment relation between a place and one that contains it.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "containedIn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/containedInPlace",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/containedInPlace",
    "description": "The basic containment relation between a place and one that contains it.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "containedInPlace",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/containsPlace",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/containsPlace",
    "description": "The basic containment relation between a place and another that it contains.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "containsPlace",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contentLocation",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contentLocation",
    "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "contentLocation",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contentRating",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contentRating",
    "description": "Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Rating",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "contentRating",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contentSize",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contentSize",
    "description": "File size in (mega/kilo) bytes.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "contentSize",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contentType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contentType",
    "description": "The supported content type(s) for an EntryPoint response.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "contentType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contentUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contentUrl",
    "description": "Actual bytes of the media object, for example the image file or video file.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "contentUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/contributor",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/contributor",
    "description": "A secondary contributor to the CreativeWork or Event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "contributor",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/copyrightHolder",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/copyrightHolder",
    "description": "The party holding the legal copyright to the CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "copyrightHolder",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/copyrightYear",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/copyrightYear",
    "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "copyrightYear",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/countriesNotSupported",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/countriesNotSupported",
    "description": "Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "countriesNotSupported",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/countriesSupported",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/countriesSupported",
    "description": "Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "countriesSupported",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/creator",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/creator",
    "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "creator",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/creditedTo",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/creditedTo",
    "description": "The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to \\"Stefani Germanotta Band\\", but by Lady Gaga.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "creditedTo",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/currency",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/currency",
    "description": "The currency in which the monetary amount is expressed.<br/><br/>

Use standard formats: <a href=\\"http://en.wikipedia.org/wiki/ISO_4217\\">ISO 4217 currency format</a> e.g. \\"USD\\"; <a href=\\"https://en.wikipedia.org/wiki/List_of_cryptocurrencies\\">Ticker symbol</a> for cryptocurrencies e.g. \\"BTC\\"; well known names for <a href=\\"https://en.wikipedia.org/wiki/Local_exchange_trading_system\\">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. \\"Ithaca HOUR\\".",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "currency",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/dataFeedElement",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/dataFeedElement",
    "description": "An item within in a data feed. Data feeds may have many elements.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataFeedItem",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "dataFeedElement",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/dataset",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/dataset",
    "description": "A dataset contained in this catalog.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Dataset",
      },
    ],
    "title": "dataset",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/datasetTimeInterval",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/datasetTimeInterval",
    "description": "The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "datasetTimeInterval",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/dateCreated",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/dateCreated",
    "description": "The date on which the CreativeWork was created or the item was added to a DataFeed.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "dateCreated",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/dateDeleted",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/dateDeleted",
    "description": "The datetime the item was removed from the DataFeed.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "dateDeleted",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/dateModified",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/dateModified",
    "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "dateModified",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/datePublished",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/datePublished",
    "description": "Date of first broadcast/publication.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "datePublished",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/dateline",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/dateline",
    "description": "A <a href=\\"https://en.wikipedia.org/wiki/Dateline\\">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.<br/><br/>

Structured representations of dateline-related information can also be expressed more explicitly using <a class=\\"localLink\\" href=\\"http://schema.org/locationCreated\\">locationCreated</a> (which represents where a work was created e.g. where a news report was written).  For location depicted or described in the content, use <a class=\\"localLink\\" href=\\"http://schema.org/contentLocation\\">contentLocation</a>.<br/><br/>

Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: \\"BEIRUT, Lebanon, June 2.\\", \\"Paris, France\\", \\"December 19, 2017 11:43AM Reporting from Washington\\", \\"Beijing/Moscow\\", \\"QUEZON CITY, Philippines\\".",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "dateline",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/dayOfWeek",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/dayOfWeek",
    "description": "The day of the week for which these opening hours are valid.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DayOfWeek",
      },
    ],
    "title": "dayOfWeek",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/deathDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/deathDate",
    "description": "Date of death.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "deathDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/deathPlace",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/deathPlace",
    "description": "The place where the person died.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "deathPlace",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/deliveryLeadTime",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/deliveryLeadTime",
    "description": "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "deliveryLeadTime",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/department",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/department",
    "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "department",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/depth",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/depth",
    "description": "The depth of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Distance",
      },
    ],
    "title": "depth",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/description",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/description",
    "description": "A description of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "description",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/device",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/device",
    "description": "Device required to run the application. Used in cases where a specific make/model is required to run the application.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "device",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/director",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/director",
    "description": "A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "director",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/directors",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/directors",
    "description": "A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "directors",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/disambiguatingDescription",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/disambiguatingDescription",
    "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "disambiguatingDescription",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/discussionUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/discussionUrl",
    "description": "A link to the page containing the comments of the CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "discussionUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/dissolutionDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/dissolutionDate",
    "description": "The date that this organization was dissolved.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "dissolutionDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/distribution",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/distribution",
    "description": "A downloadable form of this dataset, at a specific location, in a specific format.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataDownload",
      },
    ],
    "title": "distribution",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/doorTime",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/doorTime",
    "description": "The time admission will commence.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "doorTime",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/downloadUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/downloadUrl",
    "description": "If the file can be downloaded, URL to download the binary.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "downloadUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/downvoteCount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/downvoteCount",
    "description": "The number of downvotes this question, answer or comment has received from the community.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "downvoteCount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/duns",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/duns",
    "description": "The Dun &amp; Bradstreet DUNS number for identifying an organization or business person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "duns",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/duration",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/duration",
    "description": "The duration of the item (movie, audio recording, event, etc.) in <a href=\\"http://en.wikipedia.org/wiki/ISO_8601\\">ISO 8601 date format</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Duration",
      },
    ],
    "title": "duration",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/durationOfWarranty",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/durationOfWarranty",
    "description": "The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "durationOfWarranty",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/editor",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/editor",
    "description": "Specifies the Person who edited the CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "editor",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/educationalAlignment",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/educationalAlignment",
    "description": "An alignment to an established educational framework.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/AlignmentObject",
      },
    ],
    "title": "educationalAlignment",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/educationalFramework",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/educationalFramework",
    "description": "The framework to which the resource being described is aligned.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "educationalFramework",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/educationalUse",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/educationalUse",
    "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "educationalUse",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/elevation",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/elevation",
    "description": "The elevation of a location (<a href=\\"https://en.wikipedia.org/wiki/World_Geodetic_System\\">WGS 84</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "elevation",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/eligibleCustomerType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/eligibleCustomerType",
    "description": "The type(s) of customers for which the given offer is valid.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/BusinessEntityType",
      },
    ],
    "title": "eligibleCustomerType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/eligibleDuration",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/eligibleDuration",
    "description": "The duration for which the given offer is valid.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "eligibleDuration",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/eligibleQuantity",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/eligibleQuantity",
    "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "eligibleQuantity",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/eligibleRegion",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/eligibleRegion",
    "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.<br/><br/>

See also <a class=\\"localLink\\" href=\\"http://schema.org/ineligibleRegion\\">ineligibleRegion</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/GeoShape",
      },
    ],
    "title": "eligibleRegion",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/eligibleTransactionVolume",
    "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PriceSpecification",
      },
    ],
    "title": "eligibleTransactionVolume",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/email",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/email",
    "description": "Email address.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "email",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/embedUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/embedUrl",
    "description": "A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "embedUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/employee",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/employee",
    "description": "Someone working for this organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "employee",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/employees",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/employees",
    "description": "People working for this organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "employees",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/encodesCreativeWork",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/encodesCreativeWork",
    "description": "The CreativeWork encoded by this media object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "encodesCreativeWork",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/encoding",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/encoding",
    "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MediaObject",
      },
    ],
    "title": "encoding",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/encodingFormat",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/encodingFormat",
    "description": "Media type typically expressed using a MIME format (see <a href=\\"http://www.iana.org/assignments/media-types/media-types.xhtml\\">IANA site</a> and <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\\">MDN reference</a>) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).<br/><br/>

In cases where a <a class=\\"localLink\\" href=\\"http://schema.org/CreativeWork\\">CreativeWork</a> has several media type representations, <a class=\\"localLink\\" href=\\"http://schema.org/encoding\\">encoding</a> can be used to indicate each <a class=\\"localLink\\" href=\\"http://schema.org/MediaObject\\">MediaObject</a> alongside particular <a class=\\"localLink\\" href=\\"http://schema.org/encodingFormat\\">encodingFormat</a> information.<br/><br/>

Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "encodingFormat",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/encodingType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/encodingType",
    "description": "The supported encoding type(s) for an EntryPoint request.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "encodingType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/encodings",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/encodings",
    "description": "A media object that encodes this CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MediaObject",
      },
    ],
    "title": "encodings",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/endDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/endDate",
    "description": "The end date and time of the item (in <a href=\\"http://en.wikipedia.org/wiki/ISO_8601\\">ISO 8601 date format</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "endDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/endTime",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/endTime",
    "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.<br/><br/>

Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "endTime",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/equal",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/equal",
    "description": "This ordering relation for qualitative values indicates that the subject is equal to the object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QualitativeValue",
      },
    ],
    "title": "equal",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/error",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/error",
    "description": "For failed actions, more information on the cause of the failure.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "error",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/event",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/event",
    "description": "Upcoming or past event associated with this place, organization, or action.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "title": "event",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/eventStatus",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/eventStatus",
    "description": "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/EventStatusType",
      },
    ],
    "title": "eventStatus",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/events",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/events",
    "description": "Upcoming or past events associated with this place or organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "title": "events",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/exampleOfWork",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/exampleOfWork",
    "description": "A creative work that this work is an example/instance/realization/derivation of.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "exampleOfWork",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/exifData",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/exifData",
    "description": "exif data for this object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/PropertyValue",
      },
    ],
    "title": "exifData",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/expires",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/expires",
    "description": "Date the content expires and is no longer useful or available. For example a <a class=\\"localLink\\" href=\\"http://schema.org/VideoObject\\">VideoObject</a> or <a class=\\"localLink\\" href=\\"http://schema.org/NewsArticle\\">NewsArticle</a> whose availability or relevance is time-limited, or a <a class=\\"localLink\\" href=\\"http://schema.org/ClaimReview\\">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "expires",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/familyName",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/familyName",
    "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "familyName",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/faxNumber",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/faxNumber",
    "description": "The fax number.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "faxNumber",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/featureList",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/featureList",
    "description": "Features or modules provided by this application (and possibly required by other applications).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "featureList",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/feesAndCommissionsSpecification",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/feesAndCommissionsSpecification",
    "description": "Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "feesAndCommissionsSpecification",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/fileFormat",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/fileFormat",
    "description": "Media type, typically MIME format (see <a href=\\"http://www.iana.org/assignments/media-types/media-types.xhtml\\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "fileFormat",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/fileSize",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/fileSize",
    "description": "Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "fileSize",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/firstPerformance",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/firstPerformance",
    "description": "The date and place the work was first performed.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "title": "firstPerformance",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/follows",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/follows",
    "description": "The most generic uni-directional social relation.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "follows",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/founder",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/founder",
    "description": "A person who founded this organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "founder",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/founders",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/founders",
    "description": "A person who founded this organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "founders",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/foundingDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/foundingDate",
    "description": "The date that this organization was founded.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "foundingDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/foundingLocation",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/foundingLocation",
    "description": "The place where the Organization was founded.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "foundingLocation",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/free",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/free",
    "description": "A flag to signal that the item, event, or place is accessible for free.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
    ],
    "title": "free",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/funder",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/funder",
    "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "funder",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/gender",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/gender",
    "description": "Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/GenderType",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "gender",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/genre",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/genre",
    "description": "Genre of the creative work, broadcast channel or group.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "genre",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/geo",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/geo",
    "description": "The geo coordinates of the place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/GeoCoordinates",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/GeoShape",
      },
    ],
    "title": "geo",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/geographicArea",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/geographicArea",
    "description": "The geographic area associated with the audience.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/AdministrativeArea",
      },
    ],
    "title": "geographicArea",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/givenName",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/givenName",
    "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "givenName",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/globalLocationNumber",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/globalLocationNumber",
    "description": "The <a href=\\"http://www.gs1.org/gln\\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "globalLocationNumber",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/greater",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/greater",
    "description": "This ordering relation for qualitative values indicates that the subject is greater than the object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QualitativeValue",
      },
    ],
    "title": "greater",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/greaterOrEqual",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/greaterOrEqual",
    "description": "This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QualitativeValue",
      },
    ],
    "title": "greaterOrEqual",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/gtin12",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/gtin12",
    "description": "The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\">GS1 GTIN Summary</a> for more details.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "gtin12",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/gtin13",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/gtin13",
    "description": "The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\">GS1 GTIN Summary</a> for more details.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "gtin13",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/gtin14",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/gtin14",
    "description": "The GTIN-14 code of the product, or the product to which the offer refers. See <a href=\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\">GS1 GTIN Summary</a> for more details.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "gtin14",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/gtin8",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/gtin8",
    "description": "The <a href=\\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\">GS1 GTIN Summary</a> for more details.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "gtin8",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/hasMap",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/hasMap",
    "description": "A URL to a map of the place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Map",
      },
    ],
    "title": "hasMap",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/hasOfferCatalog",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/hasOfferCatalog",
    "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/OfferCatalog",
      },
    ],
    "title": "hasOfferCatalog",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/hasPOS",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/hasPOS",
    "description": "Points-of-Sales operated by the organization or person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "hasPOS",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/hasPart",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/hasPart",
    "description": "Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "hasPart",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/headline",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/headline",
    "description": "Headline of the article.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "headline",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/height",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/height",
    "description": "The height of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Distance",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "height",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/homeLocation",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/homeLocation",
    "description": "A contact location for a person's residence.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/ContactPoint",
      },
    ],
    "title": "homeLocation",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/honorificPrefix",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/honorificPrefix",
    "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "honorificPrefix",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/honorificSuffix",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/honorificSuffix",
    "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "honorificSuffix",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/hostingOrganization",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/hostingOrganization",
    "description": "The organization (airline, travelers' club, etc.) the membership is made with.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "hostingOrganization",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/hoursAvailable",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/hoursAvailable",
    "description": "The hours during which this service or contact is available.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/OpeningHoursSpecification",
      },
    ],
    "title": "hoursAvailable",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/httpMethod",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/httpMethod",
    "description": "An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "httpMethod",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/identifier",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/identifier",
    "description": "The identifier property represents any kind of identifier for any kind of <a class=\\"localLink\\" href=\\"http://schema.org/Thing\\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\\"/docs/datamodel.html#identifierBg\\">background notes</a> for more details.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PropertyValue",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "identifier",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/image",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/image",
    "description": "An image of the item. This can be a <a class=\\"localLink\\" href=\\"http://schema.org/URL\\">URL</a> or a fully described <a class=\\"localLink\\" href=\\"http://schema.org/ImageObject\\">ImageObject</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/ImageObject",
      },
    ],
    "title": "image",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/inAlbum",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/inAlbum",
    "description": "The album to which this recording belongs.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicAlbum",
      },
    ],
    "title": "inAlbum",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/inLanguage",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/inLanguage",
    "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\\"http://tools.ietf.org/html/bcp47\\">IETF BCP 47 standard</a>. See also <a class=\\"localLink\\" href=\\"http://schema.org/availableLanguage\\">availableLanguage</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Language",
      },
    ],
    "title": "inLanguage",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/inPlaylist",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/inPlaylist",
    "description": "The playlist to which this recording belongs.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicPlaylist",
      },
    ],
    "title": "inPlaylist",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/includedComposition",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/includedComposition",
    "description": "Smaller compositions included in this work (e.g. a movement in a symphony).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicComposition",
      },
    ],
    "title": "includedComposition",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/includedDataCatalog",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/includedDataCatalog",
    "description": "A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataCatalog",
      },
    ],
    "title": "includedDataCatalog",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/includedInDataCatalog",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/includedInDataCatalog",
    "description": "A data catalog which contains this dataset.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataCatalog",
      },
    ],
    "title": "includedInDataCatalog",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/includesObject",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/includesObject",
    "description": "This links to a node or nodes indicating the exact quantity of the products included in the offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/TypeAndQuantityNode",
      },
    ],
    "title": "includesObject",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/ineligibleRegion",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ineligibleRegion",
    "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.<br/><br/>

See also <a class=\\"localLink\\" href=\\"http://schema.org/eligibleRegion\\">eligibleRegion</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/GeoShape",
      },
    ],
    "title": "ineligibleRegion",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/installUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/installUrl",
    "description": "URL at which the app may be installed, if different from the URL of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "installUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/instrument",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/instrument",
    "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "instrument",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/interactionService",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/interactionService",
    "description": "The WebSite or SoftwareApplication where the interactions took place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/WebSite",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/SoftwareApplication",
      },
    ],
    "title": "interactionService",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/interactionStatistic",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/interactionStatistic",
    "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/InteractionCounter",
      },
    ],
    "title": "interactionStatistic",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/interactionType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/interactionType",
    "description": "The Action representing the type of interaction. For up votes, +1s, etc. use <a class=\\"localLink\\" href=\\"http://schema.org/LikeAction\\">LikeAction</a>. For down votes use <a class=\\"localLink\\" href=\\"http://schema.org/DislikeAction\\">DislikeAction</a>. Otherwise, use the most specific Action.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Action",
      },
    ],
    "title": "interactionType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/interactivityType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/interactivityType",
    "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "interactivityType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/interestRate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/interestRate",
    "description": "The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "interestRate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/inventoryLevel",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/inventoryLevel",
    "description": "The current approximate inventory level for the item or items.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "inventoryLevel",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isAccessibleForFree",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isAccessibleForFree",
    "description": "A flag to signal that the item, event, or place is accessible for free.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
    ],
    "title": "isAccessibleForFree",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isAccessoryOrSparePartFor",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isAccessoryOrSparePartFor",
    "description": "A pointer to another product (or multiple products) for which this product is an accessory or spare part.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
    ],
    "title": "isAccessoryOrSparePartFor",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isBasedOn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isBasedOn",
    "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "isBasedOn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isBasedOnUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isBasedOnUrl",
    "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "isBasedOnUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isConsumableFor",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isConsumableFor",
    "description": "A pointer to another product (or multiple products) for which this product is a consumable.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
    ],
    "title": "isConsumableFor",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isFamilyFriendly",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isFamilyFriendly",
    "description": "Indicates whether this content is family friendly.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
    ],
    "title": "isFamilyFriendly",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isPartOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isPartOf",
    "description": "Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "isPartOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isRelatedTo",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isRelatedTo",
    "description": "A pointer to another, somehow related product (or multiple products).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Service",
      },
    ],
    "title": "isRelatedTo",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isSimilarTo",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isSimilarTo",
    "description": "A pointer to another, functionally similar product (or multiple products).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Service",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
    ],
    "title": "isSimilarTo",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isVariantOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isVariantOf",
    "description": "A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ProductModel",
      },
    ],
    "title": "isVariantOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isicV4",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isicV4",
    "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "isicV4",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/isrcCode",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/isrcCode",
    "description": "The International Standard Recording Code for the recording.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "isrcCode",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/issn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/issn",
    "description": "The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "issn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/iswcCode",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/iswcCode",
    "description": "The International Standard Musical Work Code for the composition.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "iswcCode",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/item",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/item",
    "description": "An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')’.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "item",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/itemCondition",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/itemCondition",
    "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/OfferItemCondition",
      },
    ],
    "title": "itemCondition",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/itemListElement",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/itemListElement",
    "description": "For itemListElement values, you can use simple strings (e.g. \\"Peter\\", \\"Paul\\", \\"Mary\\"), existing entities, or use ListItem.<br/><br/>

Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.<br/><br/>

Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/ListItem",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "itemListElement",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/itemListOrder",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/itemListOrder",
    "description": "Type of ordering (e.g. Ascending, Descending, Unordered).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/ItemListOrderType",
      },
    ],
    "title": "itemListOrder",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/itemOffered",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/itemOffered",
    "description": "The item being offered.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Service",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
    ],
    "title": "itemOffered",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/itemReviewed",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/itemReviewed",
    "description": "The item that is being reviewed/rated.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "itemReviewed",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/jobTitle",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/jobTitle",
    "description": "The job title of the person (for example, Financial Manager).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "jobTitle",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/keywords",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/keywords",
    "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "keywords",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/knows",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/knows",
    "description": "The most generic bi-directional social/work relation.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "knows",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/latitude",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/latitude",
    "description": "The latitude of a location. For example <code>37.42242</code> (<a href=\\"https://en.wikipedia.org/wiki/World_Geodetic_System\\">WGS 84</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "latitude",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/learningResourceType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/learningResourceType",
    "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "learningResourceType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/legalName",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/legalName",
    "description": "The official name of the organization, e.g. the registered company name.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "legalName",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/leiCode",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/leiCode",
    "description": "An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "leiCode",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/lesser",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/lesser",
    "description": "This ordering relation for qualitative values indicates that the subject is lesser than the object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QualitativeValue",
      },
    ],
    "title": "lesser",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/lesserOrEqual",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/lesserOrEqual",
    "description": "This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QualitativeValue",
      },
    ],
    "title": "lesserOrEqual",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/license",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/license",
    "description": "A license document that applies to this content, typically indicated by URL.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "license",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/line",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/line",
    "description": "A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "line",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/loanTerm",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/loanTerm",
    "description": "The duration of the loan or credit agreement.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "loanTerm",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/location",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/location",
    "description": "The location of for example where the event is happening, an organization is located, or where an action takes place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PostalAddress",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "location",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/locationCreated",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/locationCreated",
    "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "locationCreated",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/logo",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/logo",
    "description": "An associated logo.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/ImageObject",
      },
    ],
    "title": "logo",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/longitude",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/longitude",
    "description": "The longitude of a location. For example <code>-122.08585</code> (<a href=\\"https://en.wikipedia.org/wiki/World_Geodetic_System\\">WGS 84</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "longitude",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/lyricist",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/lyricist",
    "description": "The person who wrote the words.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "lyricist",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/lyrics",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/lyrics",
    "description": "The words in the song.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "lyrics",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/mainEntity",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/mainEntity",
    "description": "Indicates the primary entity described in some page or other CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "mainEntity",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/mainEntityOfPage",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/mainEntityOfPage",
    "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\\"/docs/datamodel.html#mainEntityBackground\\">background notes</a> for details.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "mainEntityOfPage",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/makesOffer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/makesOffer",
    "description": "A pointer to products or services offered by the organization or person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Offer",
      },
    ],
    "title": "makesOffer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/manufacturer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/manufacturer",
    "description": "The manufacturer of the product.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "manufacturer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/map",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/map",
    "description": "A URL to a map of the place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "map",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/mapType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/mapType",
    "description": "Indicates the kind of Map, from the MapCategoryType Enumeration.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MapCategoryType",
      },
    ],
    "title": "mapType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/maps",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/maps",
    "description": "A URL to a map of the place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "maps",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/material",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/material",
    "description": "A material that something is made from, e.g. leather, wool, cotton, paper.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "material",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/maxPrice",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/maxPrice",
    "description": "The highest price if the price is a range.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "maxPrice",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/maxValue",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/maxValue",
    "description": "The upper value of some characteristic or property.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "maxValue",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/maximumAttendeeCapacity",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/maximumAttendeeCapacity",
    "description": "The total number of individuals that may attend an event or venue.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "maximumAttendeeCapacity",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/member",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/member",
    "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "member",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/memberOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/memberOf",
    "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ProgramMembership",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "memberOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/members",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/members",
    "description": "A member of this organization.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "members",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/membershipNumber",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/membershipNumber",
    "description": "A unique identifier for the membership.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "membershipNumber",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/memoryRequirements",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/memoryRequirements",
    "description": "Minimum memory requirements.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "memoryRequirements",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/mentions",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/mentions",
    "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "mentions",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/minPrice",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/minPrice",
    "description": "The lowest price if the price is a range.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "minPrice",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/minValue",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/minValue",
    "description": "The lower value of some characteristic or property.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "minValue",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/model",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/model",
    "description": "The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/ProductModel",
      },
    ],
    "title": "model",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/mpn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/mpn",
    "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "mpn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/musicArrangement",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/musicArrangement",
    "description": "An arrangement derived from the composition.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicComposition",
      },
    ],
    "title": "musicArrangement",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/musicBy",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/musicBy",
    "description": "The composer of the soundtrack.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicGroup",
      },
    ],
    "title": "musicBy",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/musicCompositionForm",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/musicCompositionForm",
    "description": "The type of composition (e.g. overture, sonata, symphony, etc.).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "musicCompositionForm",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/musicGroupMember",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/musicGroupMember",
    "description": "A member of a music group&#x2014;for example, John, Paul, George, or Ringo.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "musicGroupMember",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/musicReleaseFormat",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/musicReleaseFormat",
    "description": "Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicReleaseFormatType",
      },
    ],
    "title": "musicReleaseFormat",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/musicalKey",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/musicalKey",
    "description": "The key, mode, or scale this composition uses.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "musicalKey",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/naics",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/naics",
    "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "naics",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/name",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/name",
    "description": "The name of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "name",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/nationality",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/nationality",
    "description": "Nationality of the person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Country",
      },
    ],
    "title": "nationality",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/netWorth",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/netWorth",
    "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MonetaryAmount",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/PriceSpecification",
      },
    ],
    "title": "netWorth",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/nextItem",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/nextItem",
    "description": "A link to the ListItem that follows the current one.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ListItem",
      },
    ],
    "title": "nextItem",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/nonEqual",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/nonEqual",
    "description": "This ordering relation for qualitative values indicates that the subject is not equal to the object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QualitativeValue",
      },
    ],
    "title": "nonEqual",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/numTracks",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/numTracks",
    "description": "The number of tracks in this album or playlist.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "numTracks",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/numberOfEmployees",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/numberOfEmployees",
    "description": "The number of employees in an organization e.g. business.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "numberOfEmployees",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/numberOfItems",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/numberOfItems",
    "description": "The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "numberOfItems",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/object",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/object",
    "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "object",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/offeredBy",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/offeredBy",
    "description": "A pointer to the organization or person making the offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "offeredBy",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/offers",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/offers",
    "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Offer",
      },
    ],
    "title": "offers",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/openingHoursSpecification",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/openingHoursSpecification",
    "description": "The opening hours of a certain place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/OpeningHoursSpecification",
      },
    ],
    "title": "openingHoursSpecification",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/opens",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/opens",
    "description": "The opening hour of the place or service on the given day(s) of the week.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Time",
      },
    ],
    "title": "opens",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/operatingSystem",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/operatingSystem",
    "description": "Operating systems supported (Windows 7, OSX 10.6, Android 1.6).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "operatingSystem",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/organizer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/organizer",
    "description": "An organizer of an Event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "organizer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/ownedFrom",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ownedFrom",
    "description": "The date and time of obtaining the product.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "ownedFrom",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/ownedThrough",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ownedThrough",
    "description": "The date and time of giving up ownership on the product.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "ownedThrough",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/owns",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/owns",
    "description": "Products owned by the organization or person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/OwnershipInfo",
      },
    ],
    "title": "owns",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/pageEnd",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/pageEnd",
    "description": "The page on which the work ends; for example \\"138\\" or \\"xvi\\".",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "pageEnd",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/pageStart",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/pageStart",
    "description": "The page on which the work starts; for example \\"135\\" or \\"xiii\\".",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "pageStart",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/pagination",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/pagination",
    "description": "Any description of pages that is not separated into pageStart and pageEnd; for example, \\"1-6, 9, 55\\" or \\"10-12, 46-49\\".",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "pagination",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/parent",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/parent",
    "description": "A parent of this person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "parent",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/parentItem",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/parentItem",
    "description": "The parent of a question, answer or item in general.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Question",
      },
    ],
    "title": "parentItem",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/parentOrganization",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/parentOrganization",
    "description": "The larger organization that this organization is a <a class=\\"localLink\\" href=\\"http://schema.org/subOrganization\\">subOrganization</a> of, if any.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "parentOrganization",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/parentService",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/parentService",
    "description": "A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/BroadcastService",
      },
    ],
    "title": "parentService",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/parents",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/parents",
    "description": "A parents of the person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "parents",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/participant",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/participant",
    "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "participant",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/performer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/performer",
    "description": "A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "performer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/performerIn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/performerIn",
    "description": "Event that this person is a performer or participant in.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "title": "performerIn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/performers",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/performers",
    "description": "The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "performers",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/permissions",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/permissions",
    "description": "Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "permissions",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/photo",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/photo",
    "description": "A photograph of this place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ImageObject",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Photograph",
      },
    ],
    "title": "photo",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/photos",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/photos",
    "description": "Photographs of this place.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ImageObject",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Photograph",
      },
    ],
    "title": "photos",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/playerType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/playerType",
    "description": "Player type required&#x2014;for example, Flash or Silverlight.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "playerType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/polygon",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/polygon",
    "description": "A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "polygon",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/position",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/position",
    "description": "The position of an item in a series or sequence of items.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "position",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/postOfficeBoxNumber",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/postOfficeBoxNumber",
    "description": "The post office box number for PO box addresses.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "postOfficeBoxNumber",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/postalCode",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/postalCode",
    "description": "The postal code. For example, 94043.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "postalCode",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/potentialAction",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/potentialAction",
    "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Action",
      },
    ],
    "title": "potentialAction",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/predecessorOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/predecessorOf",
    "description": "A pointer from a previous, often discontinued variant of the product to its newer variant.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ProductModel",
      },
    ],
    "title": "predecessorOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/previousItem",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/previousItem",
    "description": "A link to the ListItem that preceeds the current one.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ListItem",
      },
    ],
    "title": "previousItem",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/previousStartDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/previousStartDate",
    "description": "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "previousStartDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/price",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/price",
    "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.<br/><br/>

Usage guidelines:<br/><br/>

<ul>
<li>Use the <a class=\\"localLink\\" href=\\"http://schema.org/priceCurrency\\">priceCurrency</a> property (with standard formats: <a href=\\"http://en.wikipedia.org/wiki/ISO_4217\\">ISO 4217 currency format</a> e.g. \\"USD\\"; <a href=\\"https://en.wikipedia.org/wiki/List_of_cryptocurrencies\\">Ticker symbol</a> for cryptocurrencies e.g. \\"BTC\\"; well known names for <a href=\\"https://en.wikipedia.org/wiki/Local_exchange_trading_system\\">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. \\"Ithaca HOUR\\") instead of including <a href=\\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\\">ambiguous symbols</a> such as '$' in the value.</li>
<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
<li>Note that both <a href=\\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\\">RDFa</a> and Microdata syntax allow the use of a \\"content=\\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>
<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
</ul>
",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "price",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/priceCurrency",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/priceCurrency",
    "description": "The currency of the price, or a price component when attached to <a class=\\"localLink\\" href=\\"http://schema.org/PriceSpecification\\">PriceSpecification</a> and its subtypes.<br/><br/>

Use standard formats: <a href=\\"http://en.wikipedia.org/wiki/ISO_4217\\">ISO 4217 currency format</a> e.g. \\"USD\\"; <a href=\\"https://en.wikipedia.org/wiki/List_of_cryptocurrencies\\">Ticker symbol</a> for cryptocurrencies e.g. \\"BTC\\"; well known names for <a href=\\"https://en.wikipedia.org/wiki/Local_exchange_trading_system\\">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. \\"Ithaca HOUR\\".",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "priceCurrency",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/priceSpecification",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/priceSpecification",
    "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PriceSpecification",
      },
    ],
    "title": "priceSpecification",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/priceValidUntil",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/priceValidUntil",
    "description": "The date after which the price is no longer available.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "priceValidUntil",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/printColumn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/printColumn",
    "description": "The number of the column in which the NewsArticle appears in the print edition.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "printColumn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/printEdition",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/printEdition",
    "description": "The edition of the print product in which the NewsArticle appears.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "printEdition",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/printPage",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/printPage",
    "description": "If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "printPage",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/printSection",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/printSection",
    "description": "If this NewsArticle appears in print, this field indicates the print section in which the article appeared.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "printSection",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/processingTime",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/processingTime",
    "description": "Estimated processing time for the service using this channel.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Duration",
      },
    ],
    "title": "processingTime",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/processorRequirements",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/processorRequirements",
    "description": "Processor architecture required to run the application (e.g. IA64).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "processorRequirements",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/producer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/producer",
    "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "producer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/produces",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/produces",
    "description": "The tangible thing generated by the service, e.g. a passport, permit, etc.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "produces",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/productID",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/productID",
    "description": "The product identifier, such as ISBN. For example: <code>meta itemprop=\\"productID\\" content=\\"isbn:123-456-789\\"</code>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "productID",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/productSupported",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/productSupported",
    "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \\"iPhone\\") or a general category of products or services (e.g. \\"smartphones\\").",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "productSupported",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/productionCompany",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/productionCompany",
    "description": "The production company or studio responsible for the item e.g. series, video game, episode etc.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "productionCompany",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/productionDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/productionDate",
    "description": "The date of production of the item, e.g. vehicle.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "productionDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/programName",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/programName",
    "description": "The program providing the membership.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "programName",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/propertyID",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/propertyID",
    "description": "A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)
a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
Standards bodies should promote a standard prefix for the identifiers of properties from their standards.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "propertyID",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/provider",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/provider",
    "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "provider",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/providerMobility",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/providerMobility",
    "description": "Indicates the mobility of a provided service (e.g. 'static', 'dynamic').",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "providerMobility",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/providesService",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/providesService",
    "description": "The service provided by this channel.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Service",
      },
    ],
    "title": "providesService",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/publicAccess",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/publicAccess",
    "description": "A flag to signal that the <a class=\\"localLink\\" href=\\"http://schema.org/Place\\">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
    ],
    "title": "publicAccess",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/publication",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/publication",
    "description": "A publication event associated with the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PublicationEvent",
      },
    ],
    "title": "publication",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/publishedOn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/publishedOn",
    "description": "A broadcast service associated with the publication event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/BroadcastService",
      },
    ],
    "title": "publishedOn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/publisher",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/publisher",
    "description": "The publisher of the creative work.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "publisher",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/publishingPrinciples",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/publishingPrinciples",
    "description": "The publishingPrinciples property indicates (typically via <a class=\\"localLink\\" href=\\"http://schema.org/URL\\">URL</a>) a document describing the editorial principles of an <a class=\\"localLink\\" href=\\"http://schema.org/Organization\\">Organization</a> (or individual e.g. a <a class=\\"localLink\\" href=\\"http://schema.org/Person\\">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class=\\"localLink\\" href=\\"http://schema.org/CreativeWork\\">CreativeWork</a> (e.g. <a class=\\"localLink\\" href=\\"http://schema.org/NewsArticle\\">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class=\\"localLink\\" href=\\"http://schema.org/CreativeWork\\">CreativeWork</a>.<br/><br/>

While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class=\\"localLink\\" href=\\"http://schema.org/funder\\">funder</a>) can be expressed using schema.org terminology.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "publishingPrinciples",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/purchaseDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/purchaseDate",
    "description": "The date the item e.g. vehicle was purchased by the current owner.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "purchaseDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/ratingCount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ratingCount",
    "description": "The count of total number of ratings.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "ratingCount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/ratingValue",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/ratingValue",
    "description": "The rating for the content.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "ratingValue",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/recordLabel",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/recordLabel",
    "description": "The label that issued the release.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "recordLabel",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/recordedAs",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/recordedAs",
    "description": "An audio recording of the work.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicRecording",
      },
    ],
    "title": "recordedAs",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/recordedAt",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/recordedAt",
    "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "title": "recordedAt",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/recordedIn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/recordedIn",
    "description": "The CreativeWork that captured all or part of this Event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "recordedIn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/recordingOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/recordingOf",
    "description": "The composition this track is a recording of.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicComposition",
      },
    ],
    "title": "recordingOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/regionsAllowed",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/regionsAllowed",
    "description": "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href=\\"http://en.wikipedia.org/wiki/ISO_3166\\">ISO 3166 format</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "regionsAllowed",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/relatedTo",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/relatedTo",
    "description": "The most generic familial relation.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "relatedTo",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/releaseDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/releaseDate",
    "description": "The release date of a product or product model. This can be used to distinguish the exact variant of a product.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "releaseDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/releaseNotes",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/releaseNotes",
    "description": "Description of what changed in this version.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "releaseNotes",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/releaseOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/releaseOf",
    "description": "The album this is a release of.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicAlbum",
      },
    ],
    "title": "releaseOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/releasedEvent",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/releasedEvent",
    "description": "The place and time the release was issued, expressed as a PublicationEvent.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PublicationEvent",
      },
    ],
    "title": "releasedEvent",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/remainingAttendeeCapacity",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/remainingAttendeeCapacity",
    "description": "The number of attendee places for an event that remain unallocated.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "remainingAttendeeCapacity",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/representativeOfPage",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/representativeOfPage",
    "description": "Indicates whether this image is representative of the content of the page.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
    ],
    "title": "representativeOfPage",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/requiredCollateral",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/requiredCollateral",
    "description": "Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "requiredCollateral",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/requirements",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/requirements",
    "description": "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "requirements",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/requiresSubscription",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/requiresSubscription",
    "description": "Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
    ],
    "title": "requiresSubscription",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/result",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/result",
    "description": "The result produced in the action. e.g. John wrote <em>a book</em>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "result",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/review",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/review",
    "description": "A review of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Review",
      },
    ],
    "title": "review",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/reviewBody",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/reviewBody",
    "description": "The actual body of the review.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "reviewBody",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/reviewCount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/reviewCount",
    "description": "The count of total number of reviews.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "reviewCount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/reviewRating",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/reviewRating",
    "description": "The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class=\\"localLink\\" href=\\"http://schema.org/aggregateRating\\">aggregateRating</a> property applies to the review itself, as a creative work.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Rating",
      },
    ],
    "title": "reviewRating",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/reviews",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/reviews",
    "description": "Review of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Review",
      },
    ],
    "title": "reviews",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/sameAs",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/sameAs",
    "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "sameAs",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/schemaVersion",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/schemaVersion",
    "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "schemaVersion",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/screenshot",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/screenshot",
    "description": "A link to a screenshot image of the app.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/ImageObject",
      },
    ],
    "title": "screenshot",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/seeks",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/seeks",
    "description": "A pointer to products or services sought by the organization or person (demand).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Demand",
      },
    ],
    "title": "seeks",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/seller",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/seller",
    "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "seller",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/serialNumber",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/serialNumber",
    "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "serialNumber",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/serviceArea",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/serviceArea",
    "description": "The geographic area where the service is provided.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/AdministrativeArea",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/GeoShape",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "serviceArea",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/serviceAudience",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/serviceAudience",
    "description": "The audience eligible for this service.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Audience",
      },
    ],
    "title": "serviceAudience",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/serviceLocation",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/serviceLocation",
    "description": "The location (e.g. civic structure, local business, etc.) where a person can go to access the service.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "serviceLocation",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/serviceOutput",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/serviceOutput",
    "description": "The tangible thing generated by the service, e.g. a passport, permit, etc.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Thing",
      },
    ],
    "title": "serviceOutput",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/servicePhone",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/servicePhone",
    "description": "The phone number to use to access the service.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ContactPoint",
      },
    ],
    "title": "servicePhone",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/servicePostalAddress",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/servicePostalAddress",
    "description": "The address for accessing the service by mail.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/PostalAddress",
      },
    ],
    "title": "servicePostalAddress",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/serviceSmsNumber",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/serviceSmsNumber",
    "description": "The number to access the service by text message.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ContactPoint",
      },
    ],
    "title": "serviceSmsNumber",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/serviceType",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/serviceType",
    "description": "The type of service being offered, e.g. veterans' benefits, emergency relief, etc.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "serviceType",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/serviceUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/serviceUrl",
    "description": "The website to access the service.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "serviceUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/sibling",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/sibling",
    "description": "A sibling of the person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "sibling",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/siblings",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/siblings",
    "description": "A sibling of the person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "siblings",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/sku",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/sku",
    "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "sku",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/smokingAllowed",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/smokingAllowed",
    "description": "Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
    ],
    "title": "smokingAllowed",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/softwareAddOn",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/softwareAddOn",
    "description": "Additional content for a software application.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/SoftwareApplication",
      },
    ],
    "title": "softwareAddOn",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/softwareHelp",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/softwareHelp",
    "description": "Software application help.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "softwareHelp",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/softwareRequirements",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/softwareRequirements",
    "description": "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "softwareRequirements",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/softwareVersion",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/softwareVersion",
    "description": "Version of the software instance.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "softwareVersion",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/sourceOrganization",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/sourceOrganization",
    "description": "The Organization on whose behalf the creator was working.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "sourceOrganization",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/spatial",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/spatial",
    "description": "The range of spatial applicability of a dataset, e.g. for a dataset of New York weather, the state of New York.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "spatial",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/spatialCoverage",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/spatialCoverage",
    "description": "The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "spatialCoverage",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/specialOpeningHoursSpecification",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/specialOpeningHoursSpecification",
    "description": "The special opening hours of a certain place.<br/><br/>

Use this to explicitly override general opening hours brought in scope by <a class=\\"localLink\\" href=\\"http://schema.org/openingHoursSpecification\\">openingHoursSpecification</a> or <a class=\\"localLink\\" href=\\"http://schema.org/openingHours\\">openingHours</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/OpeningHoursSpecification",
      },
    ],
    "title": "specialOpeningHoursSpecification",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/sponsor",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/sponsor",
    "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "sponsor",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/spouse",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/spouse",
    "description": "The person's spouse.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "spouse",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/startDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/startDate",
    "description": "The start date and time of the item (in <a href=\\"http://en.wikipedia.org/wiki/ISO_8601\\">ISO 8601 date format</a>).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "startDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/startTime",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/startTime",
    "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.<br/><br/>

Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "startTime",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/storageRequirements",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/storageRequirements",
    "description": "Storage requirements (free space required).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "storageRequirements",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/streetAddress",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/streetAddress",
    "description": "The street address. For example, 1600 Amphitheatre Pkwy.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "streetAddress",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/subEvent",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/subEvent",
    "description": "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "title": "subEvent",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/subEvents",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/subEvents",
    "description": "Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "title": "subEvents",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/subOrganization",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/subOrganization",
    "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "subOrganization",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/successorOf",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/successorOf",
    "description": "A pointer from a newer variant of a product  to its previous, often discontinued predecessor.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ProductModel",
      },
    ],
    "title": "successorOf",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/suggestedAnswer",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/suggestedAnswer",
    "description": "An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ItemList",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Answer",
      },
    ],
    "title": "suggestedAnswer",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/superEvent",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/superEvent",
    "description": "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Event",
      },
    ],
    "title": "superEvent",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/supportingData",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/supportingData",
    "description": "Supporting data for a SoftwareApplication.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DataFeed",
      },
    ],
    "title": "supportingData",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/target",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/target",
    "description": "Indicates a target EntryPoint for an Action.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/EntryPoint",
      },
    ],
    "title": "target",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/targetDescription",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/targetDescription",
    "description": "The description of a node in an established educational framework.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "targetDescription",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/targetName",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/targetName",
    "description": "The name of a node in an established educational framework.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "targetName",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/targetUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/targetUrl",
    "description": "The URL of a node in an established educational framework.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "targetUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/taxID",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/taxID",
    "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "taxID",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/telephone",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/telephone",
    "description": "The telephone number.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "telephone",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/temporal",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/temporal",
    "description": "The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "temporal",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/temporalCoverage",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/temporalCoverage",
    "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href=\\"https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\\">ISO 8601 time interval format</a>. In
      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \\"2011/2012\\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.
      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \\"1939/1945\\".",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "temporalCoverage",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/text",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/text",
    "description": "The textual content of this CreativeWork.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "text",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/thumbnail",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/thumbnail",
    "description": "Thumbnail image for an image or video.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ImageObject",
      },
    ],
    "title": "thumbnail",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/thumbnailUrl",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/thumbnailUrl",
    "description": "A thumbnail image relevant to the Thing.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "thumbnailUrl",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/timeRequired",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/timeRequired",
    "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Duration",
      },
    ],
    "title": "timeRequired",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/track",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/track",
    "description": "A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicRecording",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/ItemList",
      },
    ],
    "title": "track",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/tracks",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/tracks",
    "description": "A music recording (track)&#x2014;usually a single song.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/MusicRecording",
      },
    ],
    "title": "tracks",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/transcript",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/transcript",
    "description": "If this MediaObject is an AudioObject or VideoObject, the transcript of that object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "transcript",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/translator",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/translator",
    "description": "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Person",
      },
    ],
    "title": "translator",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/typeOfGood",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/typeOfGood",
    "description": "The product that this structured value is referring to.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Service",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Product",
      },
    ],
    "title": "typeOfGood",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/typicalAgeRange",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/typicalAgeRange",
    "description": "The typical expected age range, e.g. '7-9', '11-'.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "typicalAgeRange",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/unitCode",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/unitCode",
    "description": "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "unitCode",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/unitText",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/unitText",
    "description": "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
<a href='unitCode'>unitCode</a>.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "unitText",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/uploadDate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/uploadDate",
    "description": "Date when this media object was uploaded to this site.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Date",
      },
    ],
    "title": "uploadDate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/upvoteCount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/upvoteCount",
    "description": "The number of upvotes this question, answer or comment has received from the community.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "upvoteCount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/url",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/url",
    "description": "URL of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/URL",
      },
    ],
    "title": "url",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/urlTemplate",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/urlTemplate",
    "description": "An url template (RFC6570) that will be used to construct the target of the execution of the action.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "urlTemplate",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/userInteractionCount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/userInteractionCount",
    "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "userInteractionCount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/validFrom",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/validFrom",
    "description": "The date when the item becomes valid.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "validFrom",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/validThrough",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/validThrough",
    "description": "The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/DateTime",
      },
    ],
    "title": "validThrough",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/value",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/value",
    "description": "The value of the quantitative value or property value node.<br/><br/>

<ul>
<li>For <a class=\\"localLink\\" href=\\"http://schema.org/QuantitativeValue\\">QuantitativeValue</a> and <a class=\\"localLink\\" href=\\"http://schema.org/MonetaryAmount\\">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>
<li>For <a class=\\"localLink\\" href=\\"http://schema.org/PropertyValue\\">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>
</ul>
",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
    ],
    "title": "value",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/valueAddedTaxIncluded",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/valueAddedTaxIncluded",
    "description": "Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Boolean",
      },
    ],
    "title": "valueAddedTaxIncluded",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/valueReference",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/valueReference",
    "description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Enumeration",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/PropertyValue",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/StructuredValue",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/QualitativeValue",
      },
    ],
    "title": "valueReference",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/vatID",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/vatID",
    "description": "The Value-added Tax ID of the organization or person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "vatID",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/version",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/version",
    "description": "The version of the CreativeWork embodied by a specified resource.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
    ],
    "title": "version",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/video",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/video",
    "description": "An embedded video object.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/VideoObject",
      },
    ],
    "title": "video",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/videoFormat",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/videoFormat",
    "description": "The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "videoFormat",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/videoFrameSize",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/videoFrameSize",
    "description": "The frame size of the video.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "videoFrameSize",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/videoQuality",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/videoQuality",
    "description": "The quality of the video.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "videoQuality",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/warranty",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/warranty",
    "description": "The warranty promise(s) included in the offer.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/WarrantyPromise",
      },
    ],
    "title": "warranty",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/warrantyScope",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/warrantyScope",
    "description": "The scope of the warranty promise.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/WarrantyScope",
      },
    ],
    "title": "warrantyScope",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/weight",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/weight",
    "description": "The weight of the product or person.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "weight",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/width",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/width",
    "description": "The width of the item.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Distance",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/QuantitativeValue",
      },
    ],
    "title": "width",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/wordCount",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/wordCount",
    "description": "The number of words in the text of the Article.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Integer",
      },
    ],
    "title": "wordCount",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/workExample",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/workExample",
    "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "workExample",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/workFeatured",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/workFeatured",
    "description": "A work featured in some event, e.g. exhibited in an ExhibitionEvent.
       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "workFeatured",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/workLocation",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/workLocation",
    "description": "A contact location for a person's place of work.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/ContactPoint",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Place",
      },
    ],
    "title": "workLocation",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/workPerformed",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/workPerformed",
    "description": "A work performed in some event, for example a play performed in a TheaterEvent.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/CreativeWork",
      },
    ],
    "title": "workPerformed",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/worksFor",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/worksFor",
    "description": "Organizations that the person works for.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Organization",
      },
    ],
    "title": "worksFor",
  },
  Object {
    "$id": "http://supermodel.io/schemaorg/properties/worstRating",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$source": "http://schema.org/worstRating",
    "description": "The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.",
    "oneOf": Array [
      Object {
        "$ref": "http://supermodel.io/schemaorg/Number",
      },
      Object {
        "$ref": "http://supermodel.io/schemaorg/Text",
      },
    ],
    "title": "worstRating",
  },
]
`;
